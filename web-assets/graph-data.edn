{:family [{:name "base", :description "A set of definitions that are used in all definitions.", :id :base} {:name "geographies", :description "####Entry Point: /geographies/{scope}/countries  The geographies resource provides access to location related data, including lists of countries, and lists of regions by country.", :id :geographies} {:name "carts", :description "A cart's line items is a collection of [items][items] that have been added to a cart. A line item can have one or more of the same [items][items] in it. For example, one line item can have seven Rocker T-Shirt or a single Rocker T-Shirt, but it won't have one Rocker T-Shirt and a song track. The song track and T-shirt would be in separate line items.", :id :carts} {:name "itemdefinitions", :id :itemdefinitions} {:name "paymentmethods", :description "Use a selector to select paymentmethod to use for the purchase. Follow the workflow to read the paymentmethodsinfo and then create a choice to select the paymentmethod to use for the purchase.", :id :paymentmethods} {:name "paymenttokens", :description "The Payment Tokens resource is responsible for saving payment tokens to a shopper's profile and order.", :id :paymenttokens} {:name "emails", :description "Add an email to a logged in customer.  Out of the box, customers can have only one email, which is their user name. If you create a new email for a registered customer, this changes the customer's user name.", :id :emails} {:name "orders", :description "Use a selector to select the billing address to use for the purchase. Follow the workflow to read the billing address info and then create a choice to select the billing address to use for the purchase.", :id :orders} {:name "items", :description "An item is a purchasable good like a T-shirt, a movie, a song, a subscription, etc. The Items resource's responsibility is to simply identify an item. This should not be confused with [itemdefinitions][itemdefinitions], which are descriptions of the item.  Items can be discovered by using the following resources:  - [searches][searches]  - [navigations][navigations]  - [slots][slots]  - [lookups][lookups]  [itemdefinitions]: #itemdefinitions [searches]: #searches [navigations]: #navigations [slots]: #slots", :id :items} {:name "profiles", :description "####Entry Point: /profiles/{scope}/default  The profiles resource provides access to the currently logged in customer and his/her details. Using the resource you can retrieve and update a customer's first name, last name, username, [addresses][address]. You can also retrieve the customer's [purchases][purchases] and [paymentmethods][paymentmethods] through this resource.  [address]: #address [purchases]: #purchases [paymentmethods]: #paymentmethods", :id :profiles} {:name "controls", :id :controls} {:name "discounts", :description "The Discounts resource provides the discount amount for a [cart][carts] or the discount amount for a [purchase][purchases].  [carts]: #carts", :id :discounts} {:name "purchases", :description "Submit the purchase form to complete the purchase.", :id :purchases} {:name "collections", :id :collections} {:name "addresses", :id :addresses}], :plan [{:name "list-element-template", :description "Read an element in a list.", :step [{:description "Read the list.", :start "{start-resource}", :follow-link "{list-name}", :link-back "{start-name}", :result "{list-resource}"} {:description "Read an element in the list.", :start "{list-resource}", :follow-link "element", :link-back "list", :result "{element-resource}"}], :family-id :collections} {:name "read-root", :description "Read the root resource to discover the API.", :step [{:description "Read the root resource.", :start "root", :read-self [nil]}], :family-id :base} {:name "form-control-template", :description "The template for a form control", :step [{:description "Retrieve the form.", :start "{start-resource}", :follow-link "{read-form-link}", :result "{form-resource}"} {:description "Submit the form", :start "{form-resource}", :submit "{form-resource}", :to "{submit-resource}", :via-link "{submit-action-link}", :result "{submit-result}"}], :family-id :controls}], :entity [{:name "links", :description "A collection of links", :property [{:name "element-list-type", :description "The element list type.", :internal [nil], :string [nil]} {:name "element-list-id", :description "The element list id.", :internal [nil], :string [nil]} {:name "name", :description "The element list name.", :internal [nil], :string [nil]}], :entity-type "elasticpath.collections.links", :family-id :collections} {:name "paginated-links", :description "A paginated collection of links", :property [{:name "pagination", :description "Defines the pagination aspects of the links.", :is-a "pagination"}], :entity-type "elasticpath.collections.paginated-links", :family-id :collections} {:name "pagination", :description "Pagination settings.", :property [{:name "current", :description "The current page number", :integer [nil]} {:name "page-size", :description "The maximum number of elements per page", :integer [nil]} {:name "pages", :description "The total number of pages.", :integer [nil]} {:name "results-on-page", :description "The number of elements on this page", :integer [nil]} {:name "results", :description "The total number of elements.", :integer [nil]}], :family-id :collections} {:name "email", :description "The email associated with a customer account.", :property [{:name "email-id", :description "The internal email identifier.", :internal [nil], :string [nil]} {:name "email", :description "The email address.", :string [nil]}], :entity-type "elasticpath.emails.email", :family-id :emails} {:name "country", :description "Describes a country.", :property [{:name "name", :description "The name or code of the country.", :string [nil]} {:name "display-name", :description "The localized country name, intended for display in the client application.", :string [nil]}], :entity-type "elasticpath.geographies.country", :family-id :geographies} {:name "region", :description "Describes a region.", :property [{:name "name", :description "The name or code of the region.", :string [nil]} {:name "display-name", :description "The localized region name, intended for display in the client application.", :string [nil]}], :entity-type "elasticpath.geographies.region", :family-id :geographies} {:name "address", :description "The address for the customer.", :property [{:name "address-id", :description "The internal address identifier.", :internal [nil], :string [nil]} {:name "name", :description "The customer name.", :is-a "base.name"} {:name "address", :description "The customer address. Address field names are based on the v.card specification. For more information on this specification, see [v.card](http://tools.ietf.org/html/rfc2426).", :is-a "address-detail"}], :entity-type "elasticpath.addresses.address", :family-id :addresses} {:name "address-detail", :description "Describes a customers address", :property [{:name "address-id", :description "The internal address identifier.", :internal [nil], :string [nil]} {:name "street-address", :description "The street address.", :string [nil]} {:name "extended-address", :description "Extra field for address information. This field is optional.", :string [nil]} {:name "locality", :description "The city name.", :string [nil]} {:name "region", :description "Valid region codes for this field can be retrieved using the [Geographies][geographies] Resource.  [geographies]: #geographies", :string [nil]} {:name "postal-code", :description "Postal code or zip code.", :string [nil]} {:name "country-name", :description "Valid country codes for this field can be retrieved using the [Geographies][geographies] Resource.  [geographies]: #geographies", :string [nil]}], :family-id :addresses} {:name "date", :description "Describes a date.", :property [{:name "value", :description "The millisecond value of the date in [Epoch time](http://en.wikipedia.org/wiki/Epoch_\\(reference_date\\)#Computing).", :long [nil]} {:name "display-value", :description "The formatted date value to display on the client application.", :string [nil]}], :family-id :base} {:name "details", :description "Describes the details.", :property [{:name "display-name", :description "The formatted string to display on the client.", :string [nil]} {:name "name", :description "The name used by the Cortex system.", :string [nil]} {:name "display-value", :description "The formatted string to display on the client.", :string [nil]} {:name "value", :description "The raw value.", :any [nil]}], :family-id :base} {:name "cost", :description "Describes a cost.", :property [{:name "currency", :description "The currency the cost is in.", :string [{:min-length "2", :max-length "3"}]} {:name "amount", :description "The decimal value of the cost.", :decimal [{:precision "3", :fixed "3"}]} {:name "display", :description "Formatted currency string that can be displayed on the client application.", :string [nil]}], :family-id :base} {:name "named-cost", :description "Describes a tax.", :is-a "cost", :property [{:name "title", :description "The name of the tax.", :string [nil]}], :family-id :base} {:name "name", :description "Describes a person's name.", :property [{:name "given-name", :description "The person's given name.", :string [nil]} {:name "family-name", :description "The person's family name.", :string [nil]}], :family-id :base} {:name "info", :description "Information.", :property [{:name "name", :description "The info object's name.", :string [nil]} {:name "info-id", :description "The id of the represented info.", :internal [nil], :string [nil]}], :entity-type "elasticpath.controls.info", :family-id :controls} {:name "selector", :description "Describes a selector selecting a choice.", :property [{:name "name", :description "The selector object's name", :string [nil]} {:name "selection-rule", :description "Indicates the number of selections that must be made in the selector. If this rule isn't satisfied, a NeedInfo link will likely occur. For example, if a payment method is not specified for an order, a needinfo link will appear and stop the order from being purchased.", :integer [nil]} {:name "selector-id", :description "The id of the represented selector.", :internal [nil], :string [nil]}], :entity-type "elasticpath.controls.selector", :family-id :controls} {:name "profile", :description "The profile of the logged in customer.", :property [{:name "given-name", :description "Customer's first name.", :string [nil]} {:name "family-name", :description "Customer's last name.", :string [nil]} {:name "profile-id", :description "The internal profile identifier.", :internal [nil], :string [nil]}], :entity-type "profiles.profile", :family-id :profiles} {:name "discount", :description "A discount of a cart.", :property [{:name "discount", :description "The amount of the discount. Similar to prices, discount is an array because the total may be a combination of amounts in multiple currencies, for example $20 CAD + 20000 points.", :array [{:is-a "base.cost"}]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The internal purchase identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.discounts.discount", :family-id :discounts} {:name "line-item-configuration", :description "The configuration of a line item.", :dynamic [nil], :family-id :carts} {:name "line-item", :description "A line item in a cart.", :property [{:name "quantity", :description "The total number of items in the line item.", :integer [nil]} {:name "line-item-id", :description "The internal line item identifier.", :internal [nil], :string [nil]} {:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]} {:name "configuration", :description "The details of the line item configuration.", :is-a "line-item-configuration"}], :family-id :carts} {:name "cart", :description "The shopping cart.", :property [{:name "cart-id", :description "The cart identifier.", :internal [nil], :string [nil]} {:name "total-quantity", :description "Lists the total number of [items][items] in the cart.  [items]: #items", :integer [nil]}], :family-id :carts} {:name "item", :description "Defines the item type.", :property [{:name "item-id", :description "The item identifier.", :internal [nil], :string [nil]}], :family-id :items} {:name "purchase-line-item-configuration", :description "The configuration of a key/value", :dynamic [nil], :family-id :purchases} {:name "purchase-line-item", :description "A collection of items the customer purchased", :property [{:name "line-item-id", :description "The line item ID.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The purchase ID.", :internal [nil], :string [nil]} {:name "name", :description "The name of the item that was purchased.", :string [nil]} {:name "quantity", :description "The number of items that were purchased.", :integer [nil]} {:name "configuration", :description "The Fields associated with the purchase line item (Dictionary of String/Strings)", :is-a "purchase-line-item-configuration"} {:name "line-extension-tax", :description "The tax paid for the purchased item(s).", :array [{:is-a "base.cost"}]} {:name "line-extension-amount", :description "The purchase price of the item(s), excluding taxes.", :array [{:is-a "base.cost"}]} {:name "line-extension-total", :description "The total amount paid for the item(s), including taxes.", :array [{:is-a "base.cost"}]}], :entity-type "elasticpath.purchases.line-item", :family-id :purchases} {:name "purchase-line-item-option", :description "The purchase line item option entity.", :property [{:name "name", :description "The name of the item option.", :string [nil]} {:name "display-name", :description "The localized name of the item option, intended for display in the client application.", :string [nil]} {:name "selected-value-id", :description "The id of the selected value.", :string [nil]} {:name "option-id", :description "The id of the option.", :string [nil]}], :entity-type "elasticpath.purchases.option", :family-id :purchases} {:name "purchase-line-item-option-value", :description "The line item option value entity.", :property [{:name "name", :description "The name of the item option.", :string [nil]} {:name "display-name", :description "The localized name of the option name, intended for display in the client application.", :string [nil]}], :entity-type "elasticpath.purchases.value", :family-id :purchases} {:name "payment-means", :description "Describes a payment means.", :property [{:name "payment-means-id", :description "The payment means identifier.", :internal [nil], :string [nil]}], :family-id :purchases} {:name "payment-means-payment-token", :description "The payment token used for the purchase.", :is-a "payment-means", :property [{:name "display-name", :description "A description of the payment token.", :string [nil]}], :family-id :purchases} {:name "expiration-date", :description "Describes the expiration date of a credit card.", :property [{:name "month", :description "The month of the expiration date.", :string [{:min-length "2", :max-length "2"}]} {:name "year", :description "The year of the expiration date.", :string [{:min-length "4", :max-length "4"}]}], :family-id :purchases} {:name "payment-means-credit-card", :description "The credit card payment means for the purchase", :is-a "payment-means", :property [{:name "card-type", :description "The card type used for the purchase.", :string [nil]} {:name "telephone-type", :description "The type of telephone number.", :string [nil]} {:name "telephone-number", :description "The telephone number.", :string [nil]} {:name "primary-account-number-id", :description "The primary account number identifier.", :string [nil]} {:name "holder-name", :description "The card holder name used for the purchase.", :string [nil]} {:name "expiry-date", :description "The expiry date of card used for the purchase.", :is-a "expiration-date"} {:name "billing-address", :description "The billing address used for the purchase.", :is-a "addresses.address"}], :entity-type "elasticpath.purchases.purchase.paymentmeans", :family-id :purchases} {:name "purchase", :description "An order to be purchased.", :property [{:name "order-id", :description "The internal order identifier.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The internal cart identifier.", :internal [nil], :string [nil]} {:name "purchase-number", :description "Purchase number associated with the purchase. This is the reference customers use if they need to communicate with the store's customer service representative.", :string [nil]} {:name "status", :description "Indicates the status of the purchase. The following are possible status values:  * IN_PROGRESS - The purchase is being processed. * COMPLETED - The purchase is processed. * CANCELLED - The purchase is cancelled.", :string [nil]} {:name "monetary-total", :description "The total cost paid for the purchase, including taxes.", :array [{:is-a "base.cost"}]} {:name "taxes", :description "The taxes for the purchase", :array [{:is-a "base.named-cost"}]} {:name "tax-total", :description "The total amount of tax paid for the purchase.", :is-a "base.cost"} {:name "purchase-date", :description "The date on which the purchase was made.", :is-a "base.date"}], :entity-type "elasticpath.purchases.purchase", :family-id :purchases} {:name "payment-token", :description "The payment token entity.", :is-a "paymentmethods.payment-method", :property [{:name "display-name", :description "A description of the payment token to be used for display purposes.", :string [nil]} {:name "token", :description "The payment token created by a payment tokenization service.", :string [nil]}], :entity-type "elasticpath.paymenttokens.payment-token", :family-id :paymenttokens} {:name "item-definition-component", :description "The item definition component.", :property [{:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "display-name", :description "The localized name of the item definition component, intended for display in the client application.", :string [nil]} {:name "details", :description "The details of the item definition component.", :array [{:is-a "base.details"}]} {:name "quantity", :description "The quantity of components.", :integer [nil]} {:name "component-id", :description "The internal component identifier.", :internal [nil], :string [nil]} {:name "standalone-item-id", :description "The internal stand alone item identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.itemdefinitions.component", :family-id :itemdefinitions} {:name "item-definition", :description "An item definition is a description of an item.", :property [{:name "item-id", :description "item identification.", :internal [nil], :string [nil]} {:name "display-name", :description "The localized name of the item definition, intended for display in the client application.", :string [nil]} {:name "details", :description "The details of the item definition.", :array [{:is-a "base.details"}]}], :entity-type "elasticpath.itemdefinitions.item-definition", :family-id :itemdefinitions} {:name "item-definition-option", :description "The item definition option", :property [{:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "display-name", :description "The localized name of the item definition option, intended for display in the client application.", :string [nil]} {:name "name", :description "The name of the item definition option.", :string [nil]} {:name "option-id", :description "The internal option identifier.", :internal [nil], :string [nil]} {:name "option-value-id", :description "The internal option value identifier.", :internal [nil], :string [nil]} {:name "component-id", :description "The internal component identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.itemdefinitions.option", :family-id :itemdefinitions} {:name "item-definition-option-value", :description "The description of the item definition option that is currently selected.", :property [{:name "display-name", :description "The localized name of the item definition option value, intended for display in the client application.", :string [nil]} {:name "name", :description "The name of the item definition option value.", :string [nil]}], :entity-type "elasticpath.itemdefinitions.value", :family-id :itemdefinitions} {:name "payment-method", :description "Describes a payment method.", :property [{:name "payment-method-id", :description "The payment method identifier.", :internal [nil], :string [nil]}], :family-id :paymentmethods} {:name "credit-card", :description "The credit card used for the payment method.", :is-a "payment-method", :property [{:name "card-type", :description "The credit card type.", :string [nil]} {:name "cardholder-name", :description "The credit card holder name.", :string [nil]} {:name "card-number", :description "The card number.", :string [nil]} {:name "start-month", :description "The start month.", :string [nil]} {:name "start-year", :description "The start year.", :string [nil]} {:name "issue-number", :description "The issue number.", :integer [nil]} {:name "expiry-month", :description "The month of the expiration date.", :string [{:min-length "2", :max-length "2"}]} {:name "expiry-year", :description "The year of the expiration date.", :string [{:min-length "4", :max-length "4"}]}], :entity-type "elasticpath.paymentmethods.credit-card", :family-id :paymentmethods} {:name "delivery", :description "The delivery information for an order.", :property [{:name "delivery-id", :description "The internal delivery identifier.", :internal [nil], :string [nil]} {:name "delivery-type", :description "The delivery type for an order.", :string [nil]} {:name "order-id", :description "The internal order identifier.", :internal [nil], :string [nil]}], :family-id :orders} {:name "order", :description "An order to be purchased", :property [{:name "order-id", :description "The internal order identifier.", :internal [nil], :string [nil]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]}], :family-id :orders}], :resource [{:name "add-email-form", :description "The form to add an email address to a customer account.", :uri "{emails}/form", :entity "email", :family-id :emails, :id :emails/add-email-form} {:name "add-email-action", :description "The submission resource to add an email to the customer.", :uri "{emails}/action", :entity "email", :family-id :emails, :id :emails/add-email-action} {:name "emails", :description "The email addresses associated with a customer.", :uri "{base.family}/{base.scope}", :list-of "email", :family-id :emails, :id :emails/emails} {:name "email", :description "The email address associated with a customer.", :uri "{emails}/{email-id}", :entity "email", :family-id :emails, :id :emails/email} {:name "countries", :description "Provides all the countries available to a scope.", :uri "{base.family}/{base.scope}/countries", :list-of "country", :family-id :geographies, :id :geographies/countries} {:name "country", :description "A specific country.", :uri "{countries}/{country-id}", :entity "country", :family-id :geographies, :id :geographies/country} {:name "regions", :description "All the regions available for this country.", :uri "{country}/regions", :list-of "region", :family-id :geographies, :id :geographies/regions} {:name "region", :description "All the regions available for this country.", :uri "{regions}/{region-id}", :entity "region", :family-id :geographies, :id :geographies/region} {:name "address-form", :description "The list of addresses for the customer", :uri "{addresses}/form", :entity "address", :family-id :addresses, :id :addresses/address-form} {:name "create-address-action", :description "The submission resource to create an address.", :uri "{addresses}/action", :entity "address", :family-id :addresses, :id :addresses/create-address-action} {:name "addresses", :description "The list of addresses for the customer", :uri "{base.family}/{base.scope}", :list-of "address", :family-id :addresses, :id :addresses/addresses} {:name "address", :description "The address for the customer", :uri "{addresses}/{address-id}", :entity "address", :family-id :addresses, :id :addresses/address} {:name "billing-addresses", :description "The billing addresses for the customer", :uri "{addresses}/billing", :list-of "address", :family-id :addresses, :id :addresses/billing-addresses} {:name "default-billing-address", :description "The default billing address for the customer", :uri "{billing-addresses}/default", :alias "address", :family-id :addresses, :id :addresses/default-billing-address} {:name "shipping-addresses", :description "The shipping addresses for the customer", :uri "{addresses}/shipping", :list-of "address", :family-id :addresses, :id :addresses/shipping-addresses} {:name "default-shipping-address", :description "The default shipping address for the customer", :uri "{shipping-addresses}/default", :alias "address", :family-id :addresses, :id :addresses/default-shipping-address} {:name "root", :description "The root resource.", :uri "/", :family-id :base, :id :base/root} {:name "default-profile", :description "The default profile for the customer.", :uri "{base.family}/{base.scope}/default", :alias "profile", :family-id :profiles, :id :profiles/default-profile} {:name "profile", :description "The profile for the customer.", :uri "{base.family}/{base.scope}/{profile-id}", :entity "profile", :family-id :profiles, :id :profiles/profile} {:name "discount-for-cart", :description "A discount resource that identifies discount amount applied to a cart, excluding line item discounts.", :uri "{base.family}/{carts.cart}", :entity "discount", :family-id :discounts, :id :discounts/discount-for-cart} {:name "discount-for-purchase", :description "A discount resource that identifies discount amount applied to a purchase.", :uri "{base.family}/{purchases.purchase}", :entity "discount", :family-id :discounts, :id :discounts/discount-for-purchase} {:name "default-cart-line-items", :description "Line items for the default cart.", :uri "{default-cart}/lineitems", :alias "line-items", :family-id :carts, :id :carts/default-cart-line-items} {:name "line-items", :description "The line items list in a cart.", :uri "{cart}/lineitems", :list-of "line-item", :family-id :carts, :id :carts/line-items} {:name "line-item", :description "An individual line item in a cart.", :uri "{line-items}/{line-item-id}", :entity "line-item", :family-id :carts, :id :carts/line-item} {:name "add-to-default-cart-form", :description "Provides the form with which to add an item to the default cart.", :uri "{base.family}/{items.item}/form", :entity "line-item", :family-id :carts, :id :carts/add-to-default-cart-form} {:name "add-line-item-to-default-cart-action", :description "The submission resource to add an item to the default cart.", :uri "{default-cart-line-items}/{items.item}", :alias "add-line-item-to-cart-action", :family-id :carts, :id :carts/add-line-item-to-default-cart-action} {:name "add-line-item-to-cart-action", :description "The submission resource to add an item to a cart.", :uri "{line-items}/{items.item}", :entity "line-item", :family-id :carts, :id :carts/add-line-item-to-cart-action} {:name "read-cart-memberships", :description "Carts memberships for a given item", :uri "{base.family}/memberships/{items.item}", :family-id :carts, :id :carts/read-cart-memberships} {:name "default-cart", :description "Alias to the default cart for the current shopper.", :uri "{base.family}/{base.scope}/default", :alias "cart", :family-id :carts, :id :carts/default-cart} {:name "cart", :description "A cart resource, can have line items, [orders][orders], and [totals][totals].  [orders]: #orders [totals]: #totals", :uri "{base.family}/{base.scope}/{cart-id}", :entity "cart", :family-id :carts, :id :carts/cart} {:name "items", :description "List of all the items.", :uri "/{base.family}/{base.scope}", :list-of "item", :family-id :items, :id :items/items} {:name "item", :description "An item is a purchasable good like a T-shirt, a movie, a song, a subscription, etc.", :uri "/{items}/{item-id}", :entity "item", :family-id :items, :id :items/item} {:name "create-purchase-form", :description "Provides the form with which to purchase an order.", :uri "{create-purchase-action}/form", :entity "purchase", :family-id :purchases, :id :purchases/create-purchase-form} {:name "create-purchase-action", :description "The submission resource to create a purchase.", :uri "{base.family}/{orders.order}", :entity "purchase", :family-id :purchases, :id :purchases/create-purchase-action} {:name "purchase-line-items", :description "Retrieves a list of all the line items in a purchase. Each line item contains an item that was bought during the purchase. Line items can contain one or more of the same item, but will not have two different items. For example, one line item can have 7 Rock-Star t-shirts or one Rock-Star t-shirt, but it won't have one Rock-Star t-shirt and a Song track. The Song track and t-shirt would be in separate line items.", :uri "{purchase}/lineitems", :list-of "purchase-line-item", :family-id :purchases, :id :purchases/purchase-line-items} {:name "purchase-line-item", :description "A purchased line item.", :uri "{purchase-line-items}/{line-item-id}", :entity "purchase-line-item", :family-id :purchases, :id :purchases/purchase-line-item} {:name "purchase-line-item-components", :description "List of component line items of a purchased line item.", :uri "{purchase-line-item}/components", :list-of "purchase-line-item-component", :family-id :purchases, :id :purchases/purchase-line-item-components} {:name "purchase-line-item-component", :description "A component of a purchased line item.", :uri "{purchase-line-item-components}/{itemdefinitions.component-id}", :entity "purchase-line-item", :family-id :purchases, :id :purchases/purchase-line-item-component} {:name "purchase-line-item-component-options", :description "List of options of a component of a purchased line item.", :uri "{purchase-line-item-component}/options", :list-of "purchase-line-item-component-options", :family-id :purchases, :id :purchases/purchase-line-item-component-options} {:name "purchase-line-item-component-option", :description "Option of a component of a purchased line item.", :uri "{purchase-line-item-component-options}/{itemdefinitions.option-id}", :entity "purchase-line-item-option", :family-id :purchases, :id :purchases/purchase-line-item-component-option} {:name "purchase-line-item-component-option-value", :description "Option value of component of a purchased line item.", :uri "{purchase-line-item-component-option}/values/{itemdefinitions.option-value-id}", :entity "purchase-line-item-option-value", :family-id :purchases, :id :purchases/purchase-line-item-component-option-value} {:name "purchase-line-item-options", :description "The list of options of the purchased line item.", :uri "{purchase-line-item}/options", :list-of "purchase-line-item-option", :family-id :purchases, :id :purchases/purchase-line-item-options} {:name "purchase-line-item-option", :description "The option of the purchased line item.", :uri "{purchase-line-item-options}/{itemdefinitions.option-id}", :entity "purchase-line-item-option", :family-id :purchases, :id :purchases/purchase-line-item-option} {:name "purchase-line-item-option-value", :description "The option value for the purchased line item.", :uri "{purchase-line-item-option}/values/{itemdefinitions.option-value-id}", :entity "purchase-line-item-option-value", :family-id :purchases, :id :purchases/purchase-line-item-option-value} {:name "purchase-paymentmeans", :description "List of all the paymentmeans used for the purchase.", :uri "{purchase}/paymentmeans", :list-of "purchase-paymentmean", :family-id :purchases, :id :purchases/purchase-paymentmeans} {:name "purchase-paymentmean", :description "Paymentmeans is responsible for recording a purchase's billing details such as a customer's billing address and paymentmethod.", :uri "{purchase-paymentmeans}/{paymentmeans-id}", :entity "payment-means-credit-card", :family-id :purchases, :id :purchases/purchase-paymentmean} {:name "purchases", :description "The list of all purchases of a customer.", :uri "{base.family}/{base.scope}", :list-of "purchase", :family-id :purchases, :id :purchases/purchases} {:name "purchase", :description "A customer's purchase.", :uri "{purchases}/{purchase-id}", :entity "purchase", :family-id :purchases, :id :purchases/purchase} {:name "purchase-billingaddress", :description "A purchase's billing address.", :uri "{purchase}/billingaddress", :entity "addresses.address", :family-id :purchases, :id :purchases/purchase-billingaddress} {:name "order-payment-token-form", :description "Provides the form with which to create a new payment token.", :uri "{order-payment-token}/form", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/order-payment-token-form} {:name "create-payment-token", :description "Endpoint to submit a new payment token.", :uri "{base.family}/{base.scope}", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/create-payment-token} {:name "profile-payment-token-form", :description "Provides the form with which to create a new payment token.", :uri "{create-payment-token}/form", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/profile-payment-token-form} {:name "order-payment-token", :description "Provides the selected payment method on the order.", :uri "{base.family}/{orders.order}", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/order-payment-token} {:name "item-definition-components", :description "The list of item definition components.", :uri "{item-definition}/components", :list-of "item-definition-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-components} {:name "item-definition-component", :description "The item definition component.", :uri "{item-definition-components}/{component-id}", :entity "item-definition-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component} {:name "item-definition-component-options", :description "An item definition component's options.", :uri "{item-definition-component}/options", :list-of "item-definition-component-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component-options} {:name "item-definition-component-option", :description "An item definition component option.", :uri "{item-definition-component-options}/{option-id}", :entity "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component-option} {:name "item-definition-component-option-value", :description "The item definition component's option value.", :uri "{item-definition-component-option}/values/{option-value-id}", :entity "item-definition-option-value", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component-option-value} {:name "item-definition-nested-components", :description "The nested item definition components.", :uri "{item-definition-component}/components", :list-of "item-definition-nested-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-components} {:name "item-definition-nested-component", :description "The nested item definition component.", :uri "{item-definition-nested-components}/{component-id}", :entity "item-definition-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component} {:name "item-definition-nested-component-options", :description "A nested item definition component's options.", :uri "{item-definition-nested-component}/options", :list-of "item-definition-nested-component-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component-options} {:name "item-definition-nested-component-option", :description "A nested item definition component option.", :uri "{item-definition-nested-component-options}/{option-id}", :entity "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component-option} {:name "item-definition-nested-component-option-value", :description "The nested item definition component option value.", :uri "{item-definition-nested-component-option}/values/{option-value-id}", :entity "item-definition-option-value", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component-option-value} {:name "item-definition", :description "An item's definition, which includes its name, media assets (pictures of the item), options, components, from price, and details.", :uri "{base.family}/{base.scope}/{items.item-id}", :entity "item-definition", :family-id :itemdefinitions, :id :itemdefinitions/item-definition} {:name "item-definition-options", :description "The list of item definition options.", :uri "{item-definition}/options", :list-of "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-options} {:name "item-definition-option", :description "The item definition option.", :uri "{item-definition-options}/{option-id}", :entity "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-option} {:name "item-definition-option-value", :description "The item definition option value.", :uri "{item-definition-option}/values/{option-value-id}", :entity "item-definition-option-value", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-option-value} {:name "paymentmethods-selector", :description "Selector to choose a payment method for an order.", :uri "{base.family}/selector/{orders.order}", :entity "controls.selector", :family-id :paymentmethods, :id :paymentmethods/paymentmethods-selector} {:name "paymentmethods-selector-choice", :description "A payment methods selector choice.", :uri "{paymentmethod}/selector/{orders.order}", :family-id :paymentmethods, :id :paymentmethods/paymentmethods-selector-choice} {:name "paymentmethods", :description "An order resource that identifies items to be purchased.", :uri "{base.family}/{base.scope}", :list-of "paymentmethod", :family-id :paymentmethods, :id :paymentmethods/paymentmethods} {:name "default-paymentmethod", :description "The default payment method.", :uri "{paymentmethods}/default", :alias "paymentmethod", :family-id :paymentmethods, :id :paymentmethods/default-paymentmethod} {:name "paymentmethod", :description "The payment method.", :uri "{paymentmethods}/{paymentmethod-id}", :entity "credit-card", :family-id :paymentmethods, :id :paymentmethods/paymentmethod} {:name "paymentmethod-info", :description "The payment method info for an order.", :uri "{base.family}/info/{orders.order}", :entity "controls.info", :family-id :paymentmethods, :id :paymentmethods/paymentmethod-info} {:name "paymentmethod-for-order", :description "The payment method for an order.", :uri "{base.family}/{orders.order}", :entity "credit-card", :family-id :paymentmethods, :id :paymentmethods/paymentmethod-for-order} {:name "billingaddress-info-selector", :description "Selector to choose a billing address for an order.", :uri "{billingaddress-info}/selector", :entity "controls.selector", :family-id :orders, :id :orders/billingaddress-info-selector} {:name "billingaddress-info-selector-choices", :description "The choices for the billing address selector.", :uri "{billingaddress-info-selector}/{addresses.billing-addresses}", :family-id :orders, :id :orders/billingaddress-info-selector-choices} {:name "billingaddress-info-selector-choice", :description "A choice for the billing address selector.", :uri "{billingaddress-info-selector}/{addresses.address}", :family-id :orders, :id :orders/billingaddress-info-selector-choice} {:name "billingaddress-info", :description "The billing address info associated with an order.", :uri "{order}/billingaddressinfo", :entity "controls.info", :family-id :orders, :id :orders/billingaddress-info} {:name "deliveries", :description "The deliveries list for an order.", :uri "{order}/deliveries", :list-of "delivery", :family-id :orders, :id :orders/deliveries} {:name "delivery", :description "Individual delivery information for an order.", :uri "{deliveries}/{delivery-id}", :entity "delivery", :family-id :orders, :id :orders/delivery} {:name "order", :description "An order resource that identifies items to be purchased.", :uri "{base.family}/{base.scope}/{order-id}", :entity "order", :family-id :orders, :id :orders/order} {:name "email-info", :description "the customer's email that is being used for the order.", :uri "{order}/emailinfo", :entity "controls.info", :family-id :orders, :id :orders/email-info}], :relationship [{:name "add-email-form-from-emails", :description "A form to add an email address to the current user.", :rel "emailform", :from :emails/emails, :to :emails/add-email-form, :family-id :emails} {:name "action-for-add-email-form", :description "Submit a form to add an email address to the current user.", :rel "createemailaction", :from :emails/add-email-form, :to :emails/add-email-action, :family-id :emails} {:name "emails-for-profile", :description "Read the list of the profile's email addresses.", :rel "emails", :from :profiles/profile, :to :emails/emails, :family-id :emails} {:name "root-to-countries", :description "Countries can be discovered at the root.", :rel "countries", :from :base/root, :to :geographies/countries, :family-id :geographies} {:name "regions-for-country", :description "A list of regions for a country.", :rel "regions", :from :geographies/country, :to :geographies/regions, :family-id :geographies} {:name "add-address-form-from-addresses", :description "Form to create an address.", :rel "addressform", :from :addresses/addresses, :to :addresses/address-form, :family-id :addresses} {:name "add-address-form-action", :description "Action link to send address form to.", :rel "createaddressaction", :from :addresses/address-form, :to :addresses/create-address-action, :family-id :addresses} {:name "addresses-for-profile", :description "Read the list of the profile's addresses.", :rel "addresses", :from :profiles/profile, :to :addresses/addresses, :family-id :addresses} {:name "billing-addresses-from-addresses", :description "Read billing addresses from the list of addresses.", :rel "billingaddresses", :from :addresses/addresses, :to :addresses/billing-addresses, :family-id :addresses} {:name "default-billing-address-from-billing-addresses", :description "Read the default billing address from the list of billing addresses.", :rel "default", :from :addresses/billing-addresses, :to :addresses/default-billing-address, :family-id :addresses} {:name "profile-from-billing-addresses", :description "Read the profile linked to the billing addresses.", :rel "profile", :from :addresses/billing-addresses, :to :profiles/profile, :family-id :addresses} {:name "shipping-addresses-from-addresses", :description "Read shipping addresses from the list of addresses.", :rel "shippingaddresses", :from :addresses/addresses, :to :addresses/shipping-addresses, :family-id :addresses} {:name "default-shipping-address-from-shipping-addresses", :description "Read the default shipping address from the list of shipping addresses.", :rel "default", :from :addresses/shipping-addresses, :to :addresses/default-shipping-address, :family-id :addresses} {:name "profile-from-shipping-addresses", :description "Read the profile linked to the shipping addresses.", :rel "profile", :from :addresses/shipping-addresses, :to :profiles/profile, :family-id :addresses} {:name "default-profile-from-root", :description "Link from root resource to default profile.", :rel "defaultprofile", :from :base/root, :to :profiles/default-profile, :family-id :profiles} {:name "discount-applied-to-cart", :description "Retrieve the discount amount applied to a cart [total][totals], excluding line item discounts.  [totals]: #totals", :rel "discount", :rev "cart", :from :carts/cart, :to :discounts/discount-for-cart, :family-id :discounts} {:name "discount-applied-to-purchase", :description "Retrieve the discount amount applied to a [purchase][purchases].  [purchases]: #purchases", :rel "discount", :rev "purchase", :from :purchases/purchase, :to :discounts/discount-for-purchase, :family-id :discounts} {:name "line-items-for-cart", :description "A collection of items that have been added to a cart.", :rel "lineitems", :from :carts/cart, :to :carts/line-items, :family-id :carts} {:name "root-to-line-items-for-default-cart", :description "A collection of items that have been added to the default cart.", :rel "lineitems", :from :base/root, :to :carts/default-cart-line-items, :family-id :carts} {:name "cart-for-line-item", :description "Retrieve the cart that has the given line item. This workflow is \t\t\tuseful when you need to determine which cart the line item belongs to.", :rel "cart", :from :carts/line-item, :to :carts/cart, :family-id :carts} {:name "item-for-line-item", :description "What's the item this line item points to?", :rel "item", :from :carts/line-item, :to :items/item, :family-id :carts} {:name "add-to-default-cart-form-for-item", :description "The form to add an item to the default cart.", :rel "addtodefaultcartform", :from :items/item, :to :carts/add-to-default-cart-form, :family-id :carts} {:name "add-to-default-cart-action-for-form", :description "The action to invoke when submitting an add-to-default-cart form.", :rel "addtodefaultcartaction", :from :carts/add-to-default-cart-form, :to :carts/add-line-item-to-default-cart-action, :family-id :carts} {:name "cart-memberships-from-item", :description "Cart memberships from item", :rel "cartmemberships", :from :items/item, :to :carts/read-cart-memberships, :family-id :carts} {:name "root-to-default-cart", :description "Retrieve the shopper's default cart. When using *default* in the cart's URI, default evaluates to the logged in shopper's cart I.D. See the main Cortex documentation for more information on *default*.", :rel "defaultcart", :from :base/root, :to :carts/default-cart, :family-id :carts} {:name "items-from-root", :description "Link from root resource to items.", :rel "items", :from :base/root, :to :items/items, :family-id :items} {:name "create-purchase-form-from-order", :description "Retrieve the form.", :rel "purchaseform", :from :orders/order, :to :purchases/create-purchase-form, :family-id :purchases} {:name "create-purchase-action-from-create-purchase-form", :description "Submit the purchase form to complete the purchase.", :rel "submitorderaction", :from :purchases/create-purchase-form, :to :purchases/create-purchase-action, :family-id :purchases} {:name "line-items-for-purchase", :description "Retrieve a purchase's line items, which includes details on the item that was purchased such as item name, quantity purchased, and cost.", :rel "lineitems", :rev "purchase", :from :purchases/purchase, :to :purchases/purchase-line-items, :family-id :purchases} {:name "options-for-purchase-line-item", :description "The options for the item purchased.", :rel "options", :rev "lineitem", :from :purchases/purchase-line-item, :to :purchases/purchase-line-item-options, :family-id :purchases} {:name "value-for-purchase-line-item-option", :description "The option value for the item purchased.", :rel "value", :rev "option", :from :purchases/purchase-line-item-option, :to :purchases/purchase-line-item-option-value, :family-id :purchases} {:name "components-for-purchase-line-items", :description "Components for the purchased line item.", :rel "components", :from :purchases/purchase-line-item, :to :purchases/purchase-line-item-components, :family-id :purchases} {:name "options-for-purchase-line-item-component", :description "The options for the item's component.", :rel "options", :rev "lineitem", :from :purchases/purchase-line-item-component, :to :purchases/purchase-line-item-component-options, :family-id :purchases} {:name "value-for-purchase-line-item-component-option", :description "The option value for the item's component.", :rel "value", :rev "option", :from :purchases/purchase-line-item-component-option, :to :purchases/purchase-line-item-component-option-value, :family-id :purchases} {:name "paymentmeans-for-purchase", :description "List payment means for a purchase.", :rel "paymentmeans", :rev "purchase", :from :purchases/purchase-paymentmeans, :to :purchases/purchase, :family-id :purchases} {:name "purchases-for-profile", :description "Retrieve a list of purchases for the logged in customer.", :rel "purchases", :from :profiles/profile, :to :purchases/purchases, :family-id :purchases} {:name "billing-address-for-purchase", :description "The billing address associated with this purchase.", :rel "billingaddress", :from :purchases/purchase, :to :purchases/purchase-billingaddress, :family-id :purchases} {:name "form-for-order-payment-token", :description "Form to create a new payment token for an order.", :rel "paymenttokenform", :from :paymentmethods/paymentmethod-info, :to :paymenttokens/order-payment-token-form, :family-id :paymenttokens} {:name "action-for-payment-token-for-order", :description "Action to create payment token for an order.", :rel "createpaymenttokenaction", :from :paymenttokens/order-payment-token-form, :to :paymenttokens/order-payment-token, :family-id :paymenttokens} {:name "form-for-profile-payment-token", :description "Form to crate a new payment token for a profile.", :rel "paymenttokenform", :from :paymentmethods/paymentmethods, :to :paymenttokens/profile-payment-token-form, :family-id :paymenttokens} {:name "create-payment-token-form-action", :description "Action link to send payment token form to.", :rel "createpaymenttokenaction", :from :paymenttokens/profile-payment-token-form, :to :paymenttokens/create-payment-token, :family-id :paymenttokens} {:name "components-for-item-definition", :description "Read the item definition component from the list of available components.", :rel "components", :from :itemdefinitions/item-definition, :to :itemdefinitions/item-definition-components, :family-id :itemdefinitions} {:name "standalone-item-for-item-definition-component", :description "Read the component's stand alone item. Some components can be \t\t\tpurchased separately.", :rel "standaloneitem", :from :itemdefinitions/item-definition-component, :to :items/item, :family-id :itemdefinitions} {:name "options-for-item-definition-component", :description "Read the options for an item definition component.", :rel "options", :from :itemdefinitions/item-definition-component, :to :itemdefinitions/item-definition-component-options, :family-id :itemdefinitions} {:name "value-for-item-definition-component-option", :description "Read the item definition component option value.", :rel "value", :rev "option", :from :itemdefinitions/item-definition-component-option, :to :itemdefinitions/item-definition-component-option-value, :family-id :itemdefinitions} {:name "nested-components-for-item-definition-component", :description "Read a list of nested item definition components.", :rel "definition", :from :itemdefinitions/item-definition-component, :to :itemdefinitions/item-definition-nested-components, :family-id :itemdefinitions} {:name "options-for-nested-item-definition-component", :description "Read the options for a nested item definition component.", :rel "options", :from :itemdefinitions/item-definition-nested-component, :to :itemdefinitions/item-definition-nested-component-options, :family-id :itemdefinitions} {:name "value-for-nested-item-definition-component-option", :description "Read the nested item definition component option value.", :rel "value", :rev "option", :from :itemdefinitions/item-definition-nested-component-option, :to :itemdefinitions/item-definition-nested-component-option-value, :family-id :itemdefinitions} {:name "item-definition-for-item", :description "Read the item definition from the item.", :rel "definition", :rev "item", :from :items/item, :to :itemdefinitions/item-definition, :family-id :itemdefinitions} {:name "options-for-item-definition", :description "Read the options for an item definition.", :rel "options", :from :itemdefinitions/item-definition, :to :itemdefinitions/item-definition-options, :family-id :itemdefinitions} {:name "value-for-item-definition-option", :description "Read the item definition option value.", :rel "value", :rev "option", :from :itemdefinitions/item-definition-option, :to :itemdefinitions/item-definition-option-value, :family-id :itemdefinitions} {:name "selector-for-paymentmethod-info", :description "Retrieve the selector for paymentmethod info.", :rel "selector", :rev "paymentmethodinfo", :from :paymentmethods/paymentmethod-info, :to :paymentmethods/paymentmethods-selector, :family-id :paymentmethods} {:name "choice-for-paymentmethods-selector", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :paymentmethods/paymentmethods-selector, :to :paymentmethods/paymentmethods-selector-choice, :family-id :paymentmethods} {:name "description-for-paymentmethods-selector-choice", :description "Retrieve a choice's description.", :rel "description", :rev "selector", :from :paymentmethods/paymentmethods-selector, :to :paymentmethods/paymentmethods-selector-choice, :family-id :paymentmethods} {:name "select-paymentmethods-choice", :description "Select a choice.", :rel "selectaction", :from :paymentmethods/paymentmethods-selector-choice, :to :paymentmethods/paymentmethods-selector-choice, :family-id :paymentmethods} {:name "paymentmethods-for-profile", :description "The customer's payment methods.", :rel "paymentmethods", :rev "profile", :from :profiles/profile, :to :paymentmethods/paymentmethods, :family-id :paymentmethods} {:name "default-paymentmethod", :description "The customer's default payment method.", :rel "default", :rev "list", :from :paymentmethods/paymentmethods, :to :paymentmethods/default-paymentmethod, :family-id :paymentmethods} {:name "paymentmethod-info-for-order", :description "Read the payment method currently selected for the order.", :rel "paymentmethodinfo", :rev "order", :from :orders/order, :to :paymentmethods/paymentmethod-info, :family-id :paymentmethods} {:name "paymentmethod-for-order", :description "Read a payment method.", :rel "paymentmethod", :from :paymentmethods/paymentmethod-info, :to :paymentmethods/paymentmethod-for-order, :family-id :paymentmethods} {:name "selector-for-billingaddress-info", :description "Retrieve the selector.", :rel "selector", :rev "billingaddressinfo", :from :orders/billingaddress-info, :to :orders/billingaddress-info-selector, :family-id :orders} {:name "choices-for-billingaddress-info-selector", :description "Retrieve the choices for the billing address selector.", :rel "choice", :rev "selector", :from :orders/billingaddress-info-selector, :to :orders/billingaddress-info-selector-choices, :family-id :orders} {:name "choice-for-billingaddress-info-selector-choice", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :orders/billingaddress-info-selector-choices, :to :orders/billingaddress-info-selector-choice, :family-id :orders} {:name "description-for-billingaddress-info-selector-choice", :description "Retrieve a choice's description.", :rel "description", :from :orders/billingaddress-info-selector-choice, :to :addresses/address, :family-id :orders} {:name "action-for-billingaddress-info-selector-choice", :description "Select a choice.", :rel "selectaction", :from :orders/billingaddress-info-selector-choice, :to :orders/billingaddress-info-selector-choice, :family-id :orders} {:name "deliveries-for-order", :description "Retreive a list of [deliveries](#order-deliveries) for an order.", :rel "deliveries", :rev "order", :from :orders/order, :to :orders/deliveries, :family-id :orders} {:name "email-info-for-order", :description "Read order email needinfo from order.", :rel "emailinfo", :from :orders/order, :to :orders/email-info, :family-id :orders}], :uri-part [{:name "email-id", :description "A value representing the customer's email ID.", :family-id :emails} {:name "country-id", :description "The country id.", :family-id :geographies} {:name "region-id", :description "The region id.", :family-id :geographies} {:name "address-id", :description "The address ID.", :family-id :addresses} {:name "family", :description "Defines the name of a definitions family, like 'items' or 'prices'.", :family-id :base} {:name "scope", :description "Defines the scope of a resource.", :family-id :base} {:name "resource-id", :description "Defines a resource ID.", :family-id :base} {:name "profile-id", :description "The profile ID.", :family-id :profiles} {:name "line-item-id", :description "The line item identifier. This ID is a unique number assigned by Cortex API when the [item][items]is added to a cart.  [items]: #items", :family-id :carts} {:name "cart-id", :description "The cart identifier.", :family-id :carts} {:name "item-id", :description "The item identifier. This ID is a unique value across the scope.", :family-id :items} {:name "line-item-id", :description "The line item identifier.", :family-id :purchases} {:name "paymentmeans-id", :description "The paymentmeans ID.", :family-id :purchases} {:name "payment-id", :description "The paymentmeans ID.", :family-id :purchases} {:name "purchase-id", :description "The purchase ID", :family-id :purchases} {:name "component-id", :description "The component ID.", :family-id :itemdefinitions} {:name "option-id", :description "The option ID.", :family-id :itemdefinitions} {:name "option-value-id", :description "The option value ID.", :family-id :itemdefinitions} {:name "paymentmethod-id", :description "The payment method ID", :family-id :paymentmethods} {:name "delivery-id", :description "The delivery ID", :family-id :orders} {:name "order-id", :description "The order ID", :family-id :orders}], :list-of-relationship [{:name "emails", :family-id :emails, :from :emails/emails, :to :emails/email, :rel "emails"} {:name "countries", :family-id :geographies, :from :geographies/countries, :to :geographies/country, :rel "countries"} {:name "regions", :family-id :geographies, :from :geographies/regions, :to :geographies/region, :rel "regions"} {:name "addresses", :family-id :addresses, :from :addresses/addresses, :to :addresses/address, :rel "addresses"} {:name "billing-addresses", :family-id :addresses, :from :addresses/billing-addresses, :to :addresses/address, :rel "billing-addresses"} {:name "shipping-addresses", :family-id :addresses, :from :addresses/shipping-addresses, :to :addresses/address, :rel "shipping-addresses"} {:name "line-items", :family-id :carts, :from :carts/line-items, :to :carts/line-item, :rel "line-items"} {:name "items", :family-id :items, :from :items/items, :to :items/item, :rel "items"} {:name "purchase-line-items", :family-id :purchases, :from :purchases/purchase-line-items, :to :purchases/purchase-line-item, :rel "purchase-line-items"} {:name "purchase-line-item-components", :family-id :purchases, :from :purchases/purchase-line-item-components, :to :purchases/purchase-line-item-component, :rel "purchase-line-item-components"} {:name "purchase-line-item-component-options", :family-id :purchases, :from :purchases/purchase-line-item-component-options, :to :purchases/purchase-line-item-component-options, :rel "purchase-line-item-component-options"} {:name "purchase-line-item-options", :family-id :purchases, :from :purchases/purchase-line-item-options, :to :purchases/purchase-line-item-option, :rel "purchase-line-item-options"} {:name "purchase-paymentmeans", :family-id :purchases, :from :purchases/purchase-paymentmeans, :to :purchases/purchase-paymentmean, :rel "purchase-paymentmeans"} {:name "purchases", :family-id :purchases, :from :purchases/purchases, :to :purchases/purchase, :rel "purchases"} {:name "item-definition-components", :family-id :itemdefinitions, :from :itemdefinitions/item-definition-components, :to :itemdefinitions/item-definition-component, :rel "item-definition-components"} {:name "item-definition-component-options", :family-id :itemdefinitions, :from :itemdefinitions/item-definition-component-options, :to :itemdefinitions/item-definition-component-option, :rel "item-definition-component-options"} {:name "item-definition-nested-components", :family-id :itemdefinitions, :from :itemdefinitions/item-definition-nested-components, :to :itemdefinitions/item-definition-nested-component, :rel "item-definition-nested-components"} {:name "item-definition-nested-component-options", :family-id :itemdefinitions, :from :itemdefinitions/item-definition-nested-component-options, :to :itemdefinitions/item-definition-nested-component-option, :rel "item-definition-nested-component-options"} {:name "item-definition-options", :family-id :itemdefinitions, :from :itemdefinitions/item-definition-options, :to :itemdefinitions/item-definition-option, :rel "item-definition-options"} {:name "paymentmethods", :family-id :paymentmethods, :from :paymentmethods/paymentmethods, :to :paymentmethods/paymentmethod, :rel "paymentmethods"} {:name "deliveries", :family-id :orders, :from :orders/deliveries, :to :orders/delivery, :rel "deliveries"}], :pagination-relationship [], :alias-relationship [{:name "default-billing-address", :family-id :addresses, :from :addresses/default-billing-address, :to :addresses/address, :rel "default-billing-address"} {:name "default-shipping-address", :family-id :addresses, :from :addresses/default-shipping-address, :to :addresses/address, :rel "default-shipping-address"} {:name "default-profile", :family-id :profiles, :from :profiles/default-profile, :to :profiles/profile, :rel "default-profile"} {:name "default-cart-line-items", :family-id :carts, :from :carts/default-cart-line-items, :to :carts/line-items, :rel "default-cart-line-items"} {:name "add-line-item-to-default-cart-action", :family-id :carts, :from :carts/add-line-item-to-default-cart-action, :to :carts/add-line-item-to-cart-action, :rel "add-line-item-to-default-cart-action"} {:name "default-cart", :family-id :carts, :from :carts/default-cart, :to :carts/cart, :rel "default-cart"} {:name "default-paymentmethod", :family-id :paymentmethods, :from :paymentmethods/default-paymentmethod, :to :paymentmethods/paymentmethod, :rel "default-paymentmethod"}]}