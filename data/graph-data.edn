{:family [{:name "prices", :description "\n\t\t\t\nPrices describe the amount of money required to purchase an item or items. The prices resource server links prices to: [items][items], cart line items and [item definitions][itemdefinitions]\n\n[items]: #items\n[itemdefinitions]: #itemdefinitions\n\t\t\t\n\t\t", :id :prices} {:name "shipmentdetails", :id :shipmentdetails} {:name "shipmentdetails", :description "\n\t\t\t\nThe shipmentdetails resource defines how and where the physical goods you're purchasing are shipped. The *where* you're shipping\nis the shipping address, while the *how* are the shipping options (i.e. Canada Post, FedEx, etc) available for your store.\n\t\t\t\n\t\t", :id :shipmentdetails} {:name "shipmentdetails", :description "\n\t\t\t\nUses a Selector to choose the shipping option for the order. The shipping option is how the order will be\nshipped, i.e. (FedEx, Canada Post, etc). The shipping options available for your shipment depend on which shipping regions\nand shipping service levels are configured for your store. Check with your store's administrator for more information on\nthese options.\n\t\t\t\t\n\t\t", :id :shipmentdetails} {:name "itemdefinitions", :id :itemdefinitions} {:name "itemdefinitions", :description "\n\t\t\t\nAn item definition describes the item. The item's name, media [assets][assets] (pictures of the item), options, components, from price, and details describing the item's characteristics are all part of the item definitions.\nNot every item definition contains assets, options, components, etc. What is available on the item definition depends on\nthe item and how your storefront has implemented Cortex API. Some resources may be customized for your implementation, so more, or even less details may exist.\n\n[assets]: #assets\n\t\t\t\n\t\t", :id :itemdefinitions} {:name "purchases", :description "Submit the purchase form to complete the purchase.", :id :purchases} {:name "purchases", :description "\n\t\t\t\nPurchase line items are collections of items the customer purchased. Each line item can contain one or more of the same item,\nbut will not have two different items. For example, one line item can have 7 Rock-Star t-shirts or one Rock-Star t-shirt,\nbut it won't have one Rock-Star t-shirt and a Song track. The Song track and t-shirt would be in separate line items.\n\t\t\t\n\t\t", :id :purchases} {:name "purchases", :description "\n\t\t\t\nThe Paymentmeans resource is responsible for recording a purchase's billing details, such as a customer's billing address and\n[paymentmethod][paymentmethods].\n\n[paymentmethods]: #paymentmethods\n\t\t\t\n\t\t", :id :purchases} {:name "purchases", :description "\n####Entry Point: /purchases/{scope}\n\nA purchase is a receipt of an executed order. A Purchase lists the order's total cost, purchase date, purchase status\n(COMPLETE or FAILED), tax paid, paymentmeans, which lists the billing and shipping details as well as\ncustomer's [paymentmethods][paymentmethods], and line items, which are lists of the [items][items] the customer\npurchased.\n\nEach time customers make successful purchases, Cortex API records them in its database. Using the purchases resource,\nclient developers can retrieve the customer's purchase history, which allows customers to inspect their previous purchases,\ncheck for correctness, and track the purchase's status. Cortex API records each successful purchase and the last failed\npurchase. Cortex API does not track each failed purchase, it only records the last failed purchase. Once the purchase\ncompletes, the failed purchase is removed from the record and a successful purchase is recorded.\n\n[paymentmethods]: #paymentmethods\n[items]: #items\n\t\t\t\n\t\t", :id :purchases} {:name "addresses", :id :addresses} {:name "addresses", :description "\n<a id=\"addresses\">\n### addresses\n</a>\n\nThe Addresses resource is responsible for the customer's shipping and billing address. This resource allows you to\nretrieve a logged in customer's addresses, edit existing addresses, and create new addresses.\n\n#### Shipping Address vs. Billing Addresses\n\nA shipping address is where you ship the physical goods that you purchased in the store. A billing address is the address\nassociated with the [paymentmethods][paymentmethods] used for a purchase. For example, the billing address would be the\naddress on the credit card that is being used for a purchase. Customers choose which billing and shipping address to use\nfor a purchase through the [orders][orders] resources.\n\nCurrently you cannot create an address and label it as a shipping only address or label it as a billing\nonly address. Cortex does not make a distinction between the shipping and billing addresses. Read Billing Address\nbilling addresses retrieves a list of all the customer's addresses; similarly, Read Shipping Address\nretrieves a list of all the customer's addresses. Future versions of the API may allow the possibility to label what the\naddress is for, but out of the box this API version does not support this functionality.\n\n[paymentmethods]: #paymentmethods\n[orders]: #orders\n", :id :addresses} {:name "orders", :description "\n\t\t\t\nUse a selector to select the billing address to use for the purchase. Follow the workflow to read the billing address info\nand then create a choice to select the billing address to use for the purchase.\n\t\t\t\t\n\t\t", :id :orders} {:name "orders", :description "\n\t\t\t\nBilling Address Info:\n\nThe Billing address info resource provides the customer with a selector to select the billing address to use for\nthe [purchase][purchase] and an addressform to create a billing address to use for the purchase. The billing\naddress is the address that is related to the payment means, which in some cases is the address your credit card uses.\n\n[purchase]: #purchases\n\t\t\t\n\t\t", :id :orders} {:name "orders", :description "\nDeliveries:\n\nThe deliveries resource groups the shipment details, which are the how and where your goods are being shipped, for your\norders. Out of the box, you can't split orders into different shipments, so when you get the list of delivery elements\nfor an order only one element appears in the list. The order's shipment details are specified through the\n[shipmentdetails][shipmentdetails] resource.\n\n[shipmentdetails]: #shipmentdetails\n\t\t\t\n\t\t", :id :orders} {:name "orders", :description "\n\t\t\t\nAn order is a list of intentions Cortex API will undertake to complete a purchase. For example, an order lists the\nbilling and shipping address to use for the purchase, shipping options (Canada Post, FedEx, etc), paymentmethods to use\nfor the purchase, the cart containing the items to purchase, and the taxes to pay for the purchase. Once the order is\nPOSTed to a [purchase][purchases], Cortex API executes the purchase based on the intentions in the order.\n\nJust like the [cart][carts], an order is always available, persisted between sessions, and is updated automatically. For example, if a\ncustomer removes an item from their cart, the order is updated to remove the item. Once the order is POSTed to a purchase, the order is cleared and a new order is created for the customer.\n\nThe order contains *NeedInfo* links if the billing address, shipping address, shipping option or the payment methods haven't been selected.\n\n[purchases]: #purchases\n[carts]: #carts\n\t\t\t\n\t\t", :id :orders} {:name "discounts", :description "\n\t\t\t\nThe Discounts resource provides the discount amount for a [cart][carts] or the discount amount for a [purchase][purchases].\n\n[carts]: #carts\n\t\t\t\n\t\t", :id :discounts} {:name "emails", :description "\n\t\t\t\nAdd an email to a logged in customer.\n\nOut of the box, customers can have only one email, which is their user name. If you create a new email for a registered customer, this changes the customer's user name.\n\t\t\t\n\t\t", :id :emails} {:name "emails", :description "The emails resource stores a customer's emails.", :id :emails} {:name "recommendations", :description "\n\t\t\t\nRecommendations suggest additional items that may interest shoppers. For example, if a shopper is viewing an iPod,\nyou may want to display related items such as iPod accessories. If the shopper is viewing items in a Digital Camera\n[navigation node][navigations] then you can use recommendations to highlight a set of featured digital cameras in that node.\n\nRecommendations are lists of items, accessible through [item][items] for item recommendations,  [navigation nodes][navigations]\nfor navigation recommendations, and the recommendations entry point for store recommendations.\nThe recommendation's rel name reflects the type of recommendation.  For example, when accessing an item's recommendations\n a rel name could be \"crosssells\", which indicates the rel links to a list of \"cross-sell\" items.\n\t\t\t\n\t\t", :id :recommendations} {:name "navigations", :description "\n\t\t\t\n####Entry Point: /navigations/{scope}\n\nNavigation nodes organize your store's catalogs by providing containers to group related items into. Each navigation node\ncan contain details (attributes), any number of [items][items], and other child nodes. Your company's marketers create these navigation nodes, also known as categories, using the Commerce Manager. You may need\nto coordinate with your marketers for how the navigation nodes should be used in your client application.\n\n[items]: #items\n", :id :navigations} {:name "coupons", :id :coupons} {:name "coupons", :description "\n\t\t\t\nA coupon is a code, consisting of letters or numbers that a shopper can apply to an order. When a coupon is\napplied to an order, it can trigger a promotion which inturn discounts or adds additional incentives to the order.\n\t\t\t\n\t\t", :id :coupons} {:name "slots", :id :slots} {:name "paymenttokens", :description "The Payment Tokens resource is responsible for saving payment tokens to a shopper's profile and order.", :id :paymenttokens} {:name "paymenttokens", :description "The Payment Tokens resource is responsible for saving payment tokens to a shopper's profile and order.", :id :paymenttokens} {:name "paymenttokens", :description "The Payment Tokens resource is responsible for saving payment tokens to a shopper's profile and order.", :id :paymenttokens} {:name "carts", :description "\n\t\t\t\nA cart's line items is a collection of [items][items] that have been added to a cart. A line item can have one or more of the same [items][items] in it.\nFor example, one line item can have seven Rocker T-Shirt or a single Rocker T-Shirt, but it won't have one Rocker T-Shirt and a song track. The song\ntrack and T-shirt would be in separate line items.\n\t\t\t\n\t\t", :id :carts} {:name "carts", :description "Items are added to the user's default cart by using a form.", :id :carts} {:name "carts", :description "Cart memberships resource", :id :carts} {:name "carts", :description "\n####Entry Point: /carts/{scope}/default\n\nA cart is basically a basket that customers put items into that they want to purchase. While Cortex API's shopping\ncart has this as its core functionality, there is much more to this shopping cart than just that.\n\nKey concepts developers should know about carts:\n\n-  You can't delete a cart, you can only empty a cart of its contents.\n\n-  The do not need to instantiate the cart, a cart is always available.\n\n-  The do not need to create an order for the cart, an order is always available.\n\n-  Cortex automatically persists carts between customer sessions so a customer can log on through a mobile phone and\nthen log on through another device to complete the purchase\n\n\n[items]: #items\n[orders]: #orders\n[totals]: #totals\n\t\t\t\n\t\t", :id :carts} {:name "wishlists", :id :wishlists} {:name "wishlists", :id :wishlists} {:name "wishlists", :id :wishlists} {:name "wishlists", :id :wishlists} {:name "wishlists", :id :wishlists} {:name "wishlists", :description "\n####Entry Point: /wishlists/{scope}/default\n\nA wishlist is list that customers build up containing items that they are interested in, or desire to purchase.\nThis applies even to items which are out of stock, which allows a customer to track the item and to be notified when the item\nbecomes available.\nA wishlist is similar to a cart in that items can be added or removed.\nItems can also be moved between the wishlist and the cart.\nOnly one wishlist is available per shopper. This default wishlist is automatically available\nand cannot be deleted.\n\n\n[items]: #items\n[orders]: #orders\n[totals]: #totals\n\t\t\n\t\t", :id :wishlists} {:name "collections", :id :collections} {:name "shipments", :description "Represents shipment line items.", :id :shipments} {:name "shipments", :id :shipments} {:name "shipments", :id :shipments} {:name "shipments", :description "A shipment lists the shipments created by a purchase.", :id :shipments} {:name "shipments", :id :shipments} {:name "totals", :description "\n\t\t\t\nThe totals resource calculates the total costs for:\n\n* **[cart][carts]**\n* **[line-item][carts]**\n* **[order][orders]**\n* **[shipment][shipments]**\n* **[shipment-line-item][shipments]**\n\n[carts]: #carts\n[orders]: #orders\n[shipments]: #shipments\n\t\t\t\n\t\t", :id :totals} {:name "geographies", :description "\n\t\t\t\n####Entry Point: /geographies/{scope}/countries\n\nThe geographies resource provides access to location related data, including lists of countries, and lists of regions by country.\n\t\t\t\n\t\t", :id :geographies} {:name "profiles", :description "\n####Entry Point: /profiles/{scope}/default\n\nThe profiles resource provides access to the currently logged in customer and his/her details. Using the resource you can retrieve and update\na customer's first name, last name, username, [addresses][address]. You can also retrieve the customer's [purchases][purchases] and [paymentmethods][paymentmethods] through this resource.\n\n[address]: #address\n[purchases]: #purchases\n[paymentmethods]: #paymentmethods\n\t\t\t\n\t\t", :id :profiles} {:name "items", :description "\n\t\t\t\nAn item is a purchasable good like a T-shirt, a movie, a song, a subscription, etc. The Items resource's responsibility\nis to simply identify an item. This should not be confused with [itemdefinitions][itemdefinitions], which are\ndescriptions of the item.\n\nItems can be discovered by using the following resources:\n\n- [searches][searches]\n\n- [navigations][navigations]\n\n- [slots][slots]\n\n- [lookups][lookups]\n\n[itemdefinitions]: #itemdefinitions\n[searches]: #searches\n[navigations]: #navigations\n[slots]: #slots\n\t\t\t\n\t\t", :id :items} {:name "itemselections", :description "The Items selections resource provides a selector to allow customers to select item options.", :id :itemselections} {:name "base", :description "A set of definitions that are used in all definitions.", :id :base} {:name "availabilities", :description "\n\t\t\t\nDisplay the [item][items] and line item's availability. The availability identifies the item's\npurchasability. For example, in Elastic Path Commerce Engine the following states are available:\n\n*  ALWAYS\n*  NOT\\_AVAILABLE\n*  AVAILABLE\\_FOR\\_BACK\\_ORDER\n*  AVAILABLE\\_FOR\\_PRE\\_ORDER\n\n[items]: #items\n\t\t\t\n\t\t", :id :availabilities} {:name "lookups", :id :lookups} {:name "lookups", :id :lookups} {:name "lookups", :description "A lookup is a means of looking up an item.", :id :lookups} {:name "registrations", :id :registrations} {:name "promotions", :description "\n\t\t\t\nPromotions are incentives offered to shoppers to promote the purchase of [items][items] in a store. A store’s marketer creates promotions\nand defines a set of conditions that must be met before the promotion is applied to a given shopper. Promotions may trigger discounts or\nmay trigger other incentives such as free [items][items]. When a promotion triggers a discount, the discounts are automatically applied to\nthe item price, cart line item price, shipping option cost, line items total, cart total, and the order [total][totals].\n\nPromotions are linked to a number of different resources:\n\n* [Promotions][promotions] - The promotions resource provides a list of all the promotions available for the store.\n* [Items][items] - Promotions are linked to items when a promotion exists for that item and the shopper is eligible to receive the promotion.\n* [Carts][carts] - Promotions are linked to carts when the contents of the shopper’s cart meet the conditions of the promotion.\n* Cart line items - Promotions are linked to cart line items when the line item meets the conditions of the promotion.\n* Shipping options - Promotions are linked to shipping options on an order shipment when the option meets the conditions of the promotion.\n* [Purchases][purchases] - Promotions are linked to purchases when the purchase had promotions applied to it.\n* [Coupons][coupons] - Promotion are linked to a coupon when the coupon triggered the promotions to apply.\n\n[orderdeliveries]: #order-deliveries\n[coupons]: #coupons\n\t\t\t\n\t\t", :id :promotions} {:name "assets", :description "\n\t\t\t\nAssets are the media (.png, .jpg, etc) linked to an item. The JSON object's content-location field specifies where the images are located. In most cases, the\ncontent-location will be on a separate media server.\n\n[items]: #items\n\t\t\t\n\t\t", :id :assets} {:name "searches", :id :searches} {:name "searches", :id :searches} {:name "taxes", :description "\n\t\t\t\nTaxes describe the amount of tax owing for orders, shipments and shipment lineitems.\n\n[orders]: #orders\n\t\t\t\n\t\t", :id :taxes} {:name "paymentmethods", :description "\n\t\t\t\nUse a selector to select paymentmethod to use for the purchase. Follow the workflow to read the paymentmethodsinfo\nand then create a choice to select the paymentmethod to use for the purchase.\n\t\t\t\n\t\t", :id :paymentmethods} {:name "paymentmethods", :description "\n\t\t\t\nThe Payment Methods resource is responsible for the customer's paymentmethods. This resource lists all the paymentmethods\ndefined for the customer either credit cards or payment tokens. Selecting a payment method for a purchase is set\nduring the purchase's order phase.\n\t\t\t\n\t\t", :id :paymentmethods} {:name "controls", :id :controls}], :resource [{:name "price-for-item", :description "The item price resource.", :uri "{base.family}/{items.item}", :entity "item-price", :family-id :prices, :id :prices/price-for-item} {:name "price-for-cart-line-item", :description "The cart line item price resource.", :uri "{base.family}/{carts.line-item}", :entity "cart-line-item-price", :family-id :prices, :id :prices/price-for-cart-line-item} {:name "price-for-itemdefinition", :description "The item definition price resource.", :uri "{base.family}/{itemdefinitions.item-definition}", :entity "price-range", :family-id :prices, :id :prices/price-for-itemdefinition} {:name "price-for-shipment-line-item", :description "The price of the shipment line item.", :uri "{base.family}/{shipments.shipment-line-item}", :entity "shipment-line-item-price", :family-id :prices, :id :prices/price-for-shipment-line-item} {:name "destination-info-selector", :description "Selector to choose the destination for the order.", :uri "{destination-info}/selector", :entity "controls.selector", :family-id :shipmentdetails, :id :shipmentdetails/destination-info-selector} {:name "destination-info-selector-choice", :description "An option for the destination shipping address.", :uri "{destination-info-selector}/{addresses.address}", :family-id :shipmentdetails, :id :shipmentdetails/destination-info-selector-choice} {:name "destination-info", :description "The destinationinfo for the order.", :uri "{base.family}/{base.scope}/{shipment-details-id}/destinationinfo", :entity "controls.info", :family-id :shipmentdetails, :id :shipmentdetails/destination-info} {:name "shipping-option", :description "The shipping option that is currently selected for the order.", :uri "{base.family}/{base.scope}/{shipment-details-id}/shippingoptions/{shipping-option-id}", :entity "shipping-option", :family-id :shipmentdetails, :id :shipmentdetails/shipping-option} {:name "shipping-option-info", :description "The shippingoptioninfo for the order.", :uri "{base.family}/{base.scope}/{shipment-details-id}/shippingoptioninfo", :entity "controls.info", :family-id :shipmentdetails, :id :shipmentdetails/shipping-option-info} {:name "shipping-option-info-selector", :description "Selector to choose shipping option.", :uri "{shipping-option-info}/selector", :entity "controls.selector", :family-id :shipmentdetails, :id :shipmentdetails/shipping-option-info-selector} {:name "shipping-option-info-selector-choice", :description "Selector choice for the shipping option selector.", :uri "{shipping-option-info-selector}/{shipping-option}", :family-id :shipmentdetails, :id :shipmentdetails/shipping-option-info-selector-choice} {:name "item-definition-components", :description "The list of item definition components.", :uri "{item-definition}/components", :list-of "item-definition-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-components} {:name "item-definition-component", :description "The item definition component.", :uri "{item-definition-components}/{component-id}", :entity "item-definition-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component} {:name "item-definition-component-options", :description "An item definition component's options.", :uri "{item-definition-component}/options", :list-of "item-definition-component-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component-options} {:name "item-definition-component-option", :description "An item definition component option.", :uri "{item-definition-component-options}/{option-id}", :entity "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component-option} {:name "item-definition-component-option-value", :description "The item definition component's option value.", :uri "{item-definition-component-option}/values/{option-value-id}", :entity "item-definition-option-value", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-component-option-value} {:name "item-definition-nested-components", :description "The nested item definition components.", :uri "{item-definition-component}/components", :list-of "item-definition-nested-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-components} {:name "item-definition-nested-component", :description "The nested item definition component.", :uri "{item-definition-nested-components}/{component-id}", :entity "item-definition-component", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component} {:name "item-definition-nested-component-options", :description "A nested item definition component's options.", :uri "{item-definition-nested-component}/options", :list-of "item-definition-nested-component-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component-options} {:name "item-definition-nested-component-option", :description "A nested item definition component option.", :uri "{item-definition-nested-component-options}/{option-id}", :entity "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component-option} {:name "item-definition-nested-component-option-value", :description "The nested item definition component option value.", :uri "{item-definition-nested-component-option}/values/{option-value-id}", :entity "item-definition-option-value", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-nested-component-option-value} {:name "item-definition", :description "\n\t\t\t\tAn item's definition, which includes its name, media assets (pictures of the item), options, components, from price, and details.", :uri "{base.family}/{base.scope}/{items.item-id}", :entity "item-definition", :family-id :itemdefinitions, :id :itemdefinitions/item-definition} {:name "item-definition-options", :description "The list of item definition options.", :uri "{item-definition}/options", :list-of "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-options} {:name "item-definition-option", :description "The item definition option.", :uri "{item-definition-options}/{option-id}", :entity "item-definition-option", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-option} {:name "item-definition-option-value", :description "The item definition option value.", :uri "{item-definition-option}/values/{option-value-id}", :entity "item-definition-option-value", :family-id :itemdefinitions, :id :itemdefinitions/item-definition-option-value} {:name "create-purchase-form", :description "Provides the form with which to purchase an order.", :uri "{create-purchase-action}/form", :entity "purchase", :family-id :purchases, :id :purchases/create-purchase-form} {:name "create-purchase-action", :description "The submission resource to create a purchase.", :uri "{base.family}/{orders.order}", :entity "purchase", :family-id :purchases, :id :purchases/create-purchase-action} {:name "purchase-line-items", :description "\n\t\t\t\t\nRetrieves a list of all the line items in a purchase. Each line item contains an item that was bought during the purchase.\nLine items can contain one or more of the same item, but will not have two different items. For example, one line item can\nhave 7 Rock-Star t-shirts or one Rock-Star t-shirt, but it won't have one Rock-Star t-shirt and a Song track. The Song\ntrack and t-shirt would be in separate line items.\n\t\t\t\t\n\t\t\t", :uri "{purchase}/lineitems", :list-of "purchase-line-item", :family-id :purchases, :id :purchases/purchase-line-items} {:name "purchase-line-item", :description "A purchased line item.", :uri "{purchase-line-items}/{line-item-id}", :entity "purchase-line-item", :family-id :purchases, :id :purchases/purchase-line-item} {:name "purchase-line-item-components", :description "List of component line items of a purchased line item.", :uri "{purchase-line-item}/components", :list-of "purchase-line-item-component", :family-id :purchases, :id :purchases/purchase-line-item-components} {:name "purchase-line-item-component", :description "A component of a purchased line item.", :uri "{purchase-line-item-components}/{itemdefinitions.component-id}", :entity "purchase-line-item", :family-id :purchases, :id :purchases/purchase-line-item-component} {:name "purchase-line-item-component-options", :description "List of options of a component of a purchased line item.", :uri "{purchase-line-item-component}/options", :list-of "purchase-line-item-component-options", :family-id :purchases, :id :purchases/purchase-line-item-component-options} {:name "purchase-line-item-component-option", :description "Option of a component of a purchased line item.", :uri "{purchase-line-item-component-options}/{itemdefinitions.option-id}", :entity "purchase-line-item-option", :family-id :purchases, :id :purchases/purchase-line-item-component-option} {:name "purchase-line-item-component-option-value", :description "Option value of component of a purchased line item.", :uri "{purchase-line-item-component-option}/values/{itemdefinitions.option-value-id}", :entity "purchase-line-item-option-value", :family-id :purchases, :id :purchases/purchase-line-item-component-option-value} {:name "purchase-line-item-options", :description "The list of options of the purchased line item.", :uri "{purchase-line-item}/options", :list-of "purchase-line-item-option", :family-id :purchases, :id :purchases/purchase-line-item-options} {:name "purchase-line-item-option", :description "The option of the purchased line item.", :uri "{purchase-line-item-options}/{itemdefinitions.option-id}", :entity "purchase-line-item-option", :family-id :purchases, :id :purchases/purchase-line-item-option} {:name "purchase-line-item-option-value", :description "The option value for the purchased line item.", :uri "{purchase-line-item-option}/values/{itemdefinitions.option-value-id}", :entity "purchase-line-item-option-value", :family-id :purchases, :id :purchases/purchase-line-item-option-value} {:name "purchase-paymentmeans", :description "List of all the paymentmeans used for the purchase.", :uri "{purchase}/paymentmeans", :list-of "purchase-paymentmean", :family-id :purchases, :id :purchases/purchase-paymentmeans} {:name "purchase-paymentmean", :description "Paymentmeans is responsible for recording a purchase's billing details such as a customer's billing address and paymentmethod.", :uri "{purchase-paymentmeans}/{paymentmeans-id}", :entity "payment-means-credit-card", :family-id :purchases, :id :purchases/purchase-paymentmean} {:name "purchases", :description "The list of all purchases of a customer.", :uri "{base.family}/{base.scope}", :list-of "purchase", :family-id :purchases, :id :purchases/purchases} {:name "purchase", :description "A customer's purchase.", :uri "{purchases}/{purchase-id}", :entity "purchase", :family-id :purchases, :id :purchases/purchase} {:name "purchase-billingaddress", :description "A purchase's billing address.", :uri "{purchase}/billingaddress", :entity "addresses.address", :family-id :purchases, :id :purchases/purchase-billingaddress} {:name "address-form", :description "The list of addresses for the customer", :uri "{addresses}/form", :entity "address", :family-id :addresses, :id :addresses/address-form} {:name "create-address-action", :description "The submission resource to create an address.", :uri "{addresses}/action", :entity "address", :family-id :addresses, :id :addresses/create-address-action} {:name "addresses", :description "The list of addresses for the customer", :uri "{base.family}/{base.scope}", :list-of "address", :family-id :addresses, :id :addresses/addresses} {:name "address", :description "The address for the customer", :uri "{addresses}/{address-id}", :entity "address", :family-id :addresses, :id :addresses/address} {:name "billing-addresses", :description "The billing addresses for the customer", :uri "{addresses}/billing", :list-of "address", :family-id :addresses, :id :addresses/billing-addresses} {:name "default-billing-address", :description "The default billing address for the customer", :uri "{billing-addresses}/default", :alias "address", :family-id :addresses, :id :addresses/default-billing-address} {:name "shipping-addresses", :description "The shipping addresses for the customer", :uri "{addresses}/shipping", :list-of "address", :family-id :addresses, :id :addresses/shipping-addresses} {:name "default-shipping-address", :description "The default shipping address for the customer", :uri "{shipping-addresses}/default", :alias "address", :family-id :addresses, :id :addresses/default-shipping-address} {:name "billingaddress-info-selector", :description "Selector to choose a billing address for an order.", :uri "{billingaddress-info}/selector", :entity "controls.selector", :family-id :orders, :id :orders/billingaddress-info-selector} {:name "billingaddress-info-selector-choices", :description "The choices for the billing address selector.", :uri "{billingaddress-info-selector}/{addresses.billing-addresses}", :family-id :orders, :id :orders/billingaddress-info-selector-choices} {:name "billingaddress-info-selector-choice", :description "A choice for the billing address selector.", :uri "{billingaddress-info-selector}/{addresses.address}", :family-id :orders, :id :orders/billingaddress-info-selector-choice} {:name "billingaddress-info", :description "The billing address info associated with an order.", :uri "{order}/billingaddressinfo", :entity "controls.info", :family-id :orders, :id :orders/billingaddress-info} {:name "deliveries", :description "The deliveries list for an order.", :uri "{order}/deliveries", :list-of "delivery", :family-id :orders, :id :orders/deliveries} {:name "delivery", :description "Individual delivery information for an order.", :uri "{deliveries}/{delivery-id}", :entity "delivery", :family-id :orders, :id :orders/delivery} {:name "order", :description "An order resource that identifies items to be purchased.", :uri "{base.family}/{base.scope}/{order-id}", :entity "order", :family-id :orders, :id :orders/order} {:name "email-info", :description "the customer's email that is being used for the order.", :uri "{order}/emailinfo", :entity "controls.info", :family-id :orders, :id :orders/email-info} {:name "discount-for-cart", :description "A discount resource that identifies discount amount applied to a cart, excluding line item discounts.", :uri "{base.family}/{carts.cart}", :entity "discount", :family-id :discounts, :id :discounts/discount-for-cart} {:name "discount-for-purchase", :description "A discount resource that identifies discount amount applied to a purchase.", :uri "{base.family}/{purchases.purchase}", :entity "discount", :family-id :discounts, :id :discounts/discount-for-purchase} {:name "add-email-form", :description "The form to add an email address to a customer account.", :uri "{emails}/form", :entity "email", :family-id :emails, :id :emails/add-email-form} {:name "add-email-action", :description "The submission resource to add an email to the customer.", :uri "{emails}/action", :entity "email", :family-id :emails, :id :emails/add-email-action} {:name "emails", :description "The email addresses associated with a customer.", :uri "{base.family}/{base.scope}", :list-of "email", :family-id :emails, :id :emails/emails} {:name "email", :description "The email address associated with a customer.", :uri "{emails}/{email-id}", :entity "email", :family-id :emails, :id :emails/email} {:name "item-recommendation-groups", :description "Groups of itemsrecommended for an item.", :uri "/{base.family}/{items.item}", :list-of "item-recommendation-group", :family-id :recommendations, :id :recommendations/item-recommendation-groups} {:name "item-recommendation-group", :description "Other items recommended for an item.", :uri "/{item-recommendation-groups}/{group-id}", :entity "collections.paginated-links", :family-id :recommendations, :id :recommendations/item-recommendation-group} {:name "navigations", :description "All the top level navigation nodes for a store.", :uri "{base.family}/{base.scope}", :family-id :navigations, :id :navigations/navigations} {:name "navigation", :description "A single navigation node.", :uri "{navigations}/{node-id}", :entity "navigation", :family-id :navigations, :id :navigations/navigation} {:name "apply-coupon-to-order-form", :description "The coupon form to apply a coupon to an order.", :uri "/{order-coupon-action}/form", :entity "coupon", :family-id :coupons, :id :coupons/apply-coupon-to-order-form} {:name "order-coupon-action", :description "The submission resource to apply a coupon to an order.", :uri "/{base.family}/{orders.order}", :entity "coupon", :family-id :coupons, :id :coupons/order-coupon-action} {:name "couponinfo", :description "The coupon info associated with an order.", :uri "/{order-coupon-action}/info", :entity "controls.info", :family-id :coupons, :id :coupons/couponinfo} {:name "order-coupon", :description "The coupon applied to an order.", :uri "/{order-coupon-action}/{coupon-id}", :entity "coupon", :family-id :coupons, :id :coupons/order-coupon} {:name "purchase-coupon-list", :description "The coupons applied to a purchase.", :uri "/{base.family}/{purchases.purchase}", :list-of "purchase-coupon", :family-id :coupons, :id :coupons/purchase-coupon-list} {:name "purchase-coupon", :description "A coupon applied to a purchase.", :uri "/{purchase-coupon-list}/{coupon-id}", :entity "coupon", :family-id :coupons, :id :coupons/purchase-coupon} {:name "slots", :description "A slots list.", :uri "{base.family}/{base.scope}", :list-of "slot", :family-id :slots, :id :slots/slots} {:name "slot", :description "A slot resource that displays dynamic content.", :uri "{slots}/{slot-id}", :entity "slot", :family-id :slots, :id :slots/slot} {:name "order-payment-token-form", :description "Provides the form with which to create a new payment token.", :uri "{order-payment-token}/form", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/order-payment-token-form} {:name "create-payment-token", :description "Endpoint to submit a new payment token.", :uri "{base.family}/{base.scope}", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/create-payment-token} {:name "profile-payment-token-form", :description "Provides the form with which to create a new payment token.", :uri "{create-payment-token}/form", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/profile-payment-token-form} {:name "order-payment-token", :description "Provides the selected payment method on the order.", :uri "{base.family}/{orders.order}", :entity "payment-token", :family-id :paymenttokens, :id :paymenttokens/order-payment-token} {:name "default-cart-line-items", :description "Line items for the default cart.", :uri "{default-cart}/lineitems", :alias "line-items", :family-id :carts, :id :carts/default-cart-line-items} {:name "line-items", :description "The line items list in a cart.", :uri "{cart}/lineitems", :list-of "line-item", :family-id :carts, :id :carts/line-items} {:name "line-item", :description "An individual line item in a cart.", :uri "{line-items}/{line-item-id}", :entity "line-item", :family-id :carts, :id :carts/line-item} {:name "add-to-default-cart-form", :description "Provides the form with which to add an item to the default cart.", :uri "{base.family}/{items.item}/form", :entity "line-item", :family-id :carts, :id :carts/add-to-default-cart-form} {:name "add-line-item-to-default-cart-action", :description "The submission resource to add an item to the default cart.", :uri "{default-cart-line-items}/{items.item}", :alias "add-line-item-to-cart-action", :family-id :carts, :id :carts/add-line-item-to-default-cart-action} {:name "add-line-item-to-cart-action", :description "The submission resource to add an item to a cart.", :uri "{line-items}/{items.item}", :entity "line-item", :family-id :carts, :id :carts/add-line-item-to-cart-action} {:name "read-cart-memberships", :description "Carts memberships for a given item", :uri "{base.family}/memberships/{items.item}", :family-id :carts, :id :carts/read-cart-memberships} {:name "default-cart", :description "Alias to the default cart for the current shopper.", :uri "{base.family}/{base.scope}/default", :alias "cart", :family-id :carts, :id :carts/default-cart} {:name "cart", :description "\n\t\t\t\t\nA cart resource, can have line items, [orders][orders], and [totals][totals].\n\n[orders]: #orders\n[totals]: #totals\n\t\t\t\t\n\t\t\t", :uri "{base.family}/{base.scope}/{cart-id}", :entity "cart", :family-id :carts, :id :carts/cart} {:name "add-item-to-wishlist-form", :description "Form for adding an item to the default wishlist", :uri "{base.family}/{items.item}/form", :form [{:entity "add-item-to-wishlist-form", :action-rel "addtodefaultwishlistaction", :result "wishlist-line-item"}], :family-id :wishlists, :id :wishlists/add-item-to-wishlist-form} {:name "wishlist-line-items", :description "The line items list in a wishlist.", :uri "{wishlist}/lineitems", :list-of "wishlist-line-item", :family-id :wishlists, :id :wishlists/wishlist-line-items} {:name "wishlist-line-item", :description "An individual line item in a wishlist.", :uri "{wishlist-line-items}/{line-item-id}", :entity "wishlist-line-item", :family-id :wishlists, :id :wishlists/wishlist-line-item} {:name "move-to-wishlist-form", :description "Form for moving a cart line item to a wishlist", :uri "{wishlists}/{carts.line-item}/form", :form [{:entity "move-to-wishlist-form", :action-rel "movetowishlistaction", :result "wishlist-line-item"}], :family-id :wishlists, :id :wishlists/move-to-wishlist-form} {:name "move-to-cart-form", :description "Form for moving a cart line item to a wishlist", :uri "{wishlist-line-item}/carts/form", :form [{:entity "move-to-cart-form", :action-rel "movetocartaction", :result "carts.line-item"}], :family-id :wishlists, :id :wishlists/move-to-cart-form} {:name "read-wishlist-memberships", :description "Retrieve the list of wishlists that an item has been added to", :uri "{base.family}/memberships/{items.item}", :list-of "wishlist", :family-id :wishlists, :id :wishlists/read-wishlist-memberships} {:name "default-wishlist", :description "Alias of the shopper's default wishlist.", :uri "{wishlists}/default", :alias "wishlist", :family-id :wishlists, :id :wishlists/default-wishlist} {:name "wishlist", :description "\n\t\t\t\t\n\t\t\t\t\tA wishlist resource, can have line items.\n\t\t\t\t\n\t\t\t\t", :uri "{wishlists}/{wishlist-id}", :entity "wishlist", :family-id :wishlists, :id :wishlists/wishlist} {:name "wishlists", :description "Wishlist list resource", :uri "{base.family}/{base.scope}", :list-of "wishlist", :family-id :wishlists, :id :wishlists/wishlists} {:name "shipment-line-items", :description "A list of line items associated with a given shipment.", :uri "{shipment}/lineitems", :list-of "shipment-line-item", :family-id :shipments, :id :shipments/shipment-line-items} {:name "shipment-line-item", :description "A line item associated with a given shipment.", :uri "{shipment-line-items}/{shipment-line-item-id}", :entity "shipment-line-item", :family-id :shipments, :id :shipments/shipment-line-item} {:name "shipment-line-item-options", :description "A list of options associated with a given shipment line item.", :uri "{shipment-line-item}/options", :list-of "shipment-line-item-option", :family-id :shipments, :id :shipments/shipment-line-item-options} {:name "shipment-line-item-option", :description "A line item option associated with a given shipment line item.", :uri "{shipment-line-item-options}/{shipment-line-item-option-id}", :entity "shipment-line-item-option", :family-id :shipments, :id :shipments/shipment-line-item-option} {:name "shipment-line-item-option-value", :description "The option value associated with a given shipment line item.", :uri "{shipment-line-item-option}/values/{shipment-line-item-option-value-id}", :entity "shipment-line-item-option-value", :family-id :shipments, :id :shipments/shipment-line-item-option-value} {:name "purchase-shipment-shipping-address", :description "The address a shipment was sent to.", :uri "{shipment}/shippingaddress", :entity "addresses.address", :family-id :shipments, :id :shipments/purchase-shipment-shipping-address} {:name "purchase-shipment-shipping-option", :description "A shipment associated with a given purchase.", :uri "{shipment}/shippingoption", :entity "shipmentdetails.shipping-option", :family-id :shipments, :id :shipments/purchase-shipment-shipping-option} {:name "shipments", :description "A list of shipments associated with a given purchase.", :uri "{base.family}/{purchases.purchase}", :list-of "shipment", :family-id :shipments, :id :shipments/shipments} {:name "shipment", :description "A shipment associated with a given purchase.", :uri "{shipments}/{shipment-id}", :entity "shipment", :family-id :shipments, :id :shipments/shipment} {:name "cart-total", :description "The cart total resource.", :uri "{base.family}/{carts.cart}", :entity "total", :family-id :totals, :id :totals/cart-total} {:name "cart-line-item-total", :description "The cart line item total resource.", :uri "{base.family}/{carts.line-item}", :entity "total", :family-id :totals, :id :totals/cart-line-item-total} {:name "order-total", :description "The order total resource.", :uri "{base.family}/{orders.order}", :entity "total", :family-id :totals, :id :totals/order-total} {:name "shipment-line-item-total", :description "The shipment line item total resource.", :uri "{base.family}/{shipments.shipment-line-item}", :entity "total", :family-id :totals, :id :totals/shipment-line-item-total} {:name "shipment-total", :description "The shipment total resource.", :uri "{base.family}/{shipments.shipment}", :entity "total", :family-id :totals, :id :totals/shipment-total} {:name "countries", :description "Provides all the countries available to a scope.", :uri "{base.family}/{base.scope}/countries", :list-of "country", :family-id :geographies, :id :geographies/countries} {:name "country", :description "A specific country.", :uri "{countries}/{country-id}", :entity "country", :family-id :geographies, :id :geographies/country} {:name "regions", :description "All the regions available for this country.", :uri "{country}/regions", :list-of "region", :family-id :geographies, :id :geographies/regions} {:name "region", :description "All the regions available for this country.", :uri "{regions}/{region-id}", :entity "region", :family-id :geographies, :id :geographies/region} {:name "default-profile", :description "The default profile for the customer.", :uri "{base.family}/{base.scope}/default", :alias "profile", :family-id :profiles, :id :profiles/default-profile} {:name "profile", :description "The profile for the customer.", :uri "{base.family}/{base.scope}/{profile-id}", :entity "profile", :family-id :profiles, :id :profiles/profile} {:name "items", :description "List of all the items.", :uri "/{base.family}/{base.scope}", :list-of "item", :family-id :items, :id :items/items} {:name "item", :description "An item is a purchasable good like a T-shirt, a movie, a song, a subscription, etc.", :uri "/{items}/{item-id}", :entity "item", :family-id :items, :id :items/item} {:name "itemselections-option-selector", :description "Selector to select an item definition option.", :uri "{base.family}/{base.scope}/{items.item-id}/options/{option-id}/selector", :entity "controls.selector", :family-id :itemselections, :id :itemselections/itemselections-option-selector} {:name "itemselections-option-value-selector", :description "An item selection option value choice.", :uri "{base.family}/{base.scope}/{items.item-id}/options/{option-id}/values/{option-value-id}/selector", :family-id :itemselections, :id :itemselections/itemselections-option-value-selector} {:name "root", :description "The root resource.", :uri "/", :family-id :base, :id :base/root} {:name "availability-for-item", :description "The item's availability. The availability identifies the item's purchasability.", :uri "{base.family}/{items.item}", :entity "availability", :family-id :availabilities, :id :availabilities/availability-for-item} {:name "availability-for-cart-line-item", :description "\n\t\t\t\tThe line item's availability. The availability identifies the purchasability of the item(s) in the line item.", :uri "{base.family}/{carts.line-item}", :entity "availability", :family-id :availabilities, :id :availabilities/availability-for-cart-line-item} {:name "batch-items-form", :description "Provides the form with which to search for items by code.", :uri "{batch-items-action}/form", :entity "codes", :family-id :lookups, :id :lookups/batch-items-form} {:name "batch-items-action", :description "The submission resource for lookup a batch of items by a list of codes.", :uri "{lookups}/batches/items", :entity "codes", :family-id :lookups, :id :lookups/batch-items-action} {:name "lookup-item-form", :description "Provides the form with which to search for items by code.", :uri "{lookup-item-action}/form", :entity "code", :family-id :lookups, :id :lookups/lookup-item-form} {:name "lookup-item-action", :description "The submission resource for searching for an item by code.", :uri "{lookups}/items", :entity "code", :family-id :lookups, :id :lookups/lookup-item-action} {:name "lookups", :description "All the top level lookups for a store.", :uri "{base.family}/{base.scope}", :family-id :lookups, :id :lookups/lookups} {:name "code-for-item", :description "The item code resource.", :uri "{base.family}/{items.item}", :entity "code", :family-id :lookups, :id :lookups/code-for-item} {:name "batch-items", :description "Provides a batched list of items.", :uri "{batch-items-action}/{batch-id}", :list-of "items.item", :family-id :lookups, :id :lookups/batch-items} {:name "new-account-registration-form", :description "Provides the form with which to register a new account.", :uri "{base.family}/{base.scope}/newaccount/form", :form [{:entity "registration", :action-rel "registeraction", :result "profiles.profile"}], :family-id :registrations, :id :registrations/new-account-registration-form} {:name "promotion", :description "A promotion.", :uri "{base.family}/{base.scope}/{promotion-id}", :entity "promotion", :family-id :promotions, :id :promotions/promotion} {:name "applied-promotions-for-cart-line-item", :description "A list of promotions applied to a cart line item.", :uri "{base.family}/{carts.line-item}/applied", :list-of "promotion", :family-id :promotions, :id :promotions/applied-promotions-for-cart-line-item} {:name "possible-promotions-for-cart", :description "A list of promotions possible for a cart.", :uri "{base.family}/{carts.cart}/possible", :list-of "promotion", :family-id :promotions, :id :promotions/possible-promotions-for-cart} {:name "applied-promotions-for-cart", :description "A list of promotions applied to a cart.", :uri "{base.family}/{carts.cart}/applied", :list-of "promotion", :family-id :promotions, :id :promotions/applied-promotions-for-cart} {:name "purchase-promotion", :description "A list of promotions applied for a purchase.", :uri "{base.family}/{purchases.purchase}/{promotion-id}", :entity "promotion", :family-id :promotions, :id :promotions/purchase-promotion} {:name "applied-promotions-for-purchase", :description "A list of promotions applied for a purchase.", :uri "{base.family}/{purchases.purchase}/applied", :list-of "purchase-promotion", :family-id :promotions, :id :promotions/applied-promotions-for-purchase} {:name "applied-promotions-for-item", :description "A list of promotions applied to an item.", :uri "{base.family}/{items.item}/applied", :list-of "promotion", :family-id :promotions, :id :promotions/applied-promotions-for-item} {:name "possible-promotions-for-item", :description "A list of promotions possible for an item.", :uri "{base.family}/{items.item}/possible", :list-of "promotion", :family-id :promotions, :id :promotions/possible-promotions-for-item} {:name "applied-promotions-for-shipping-option", :description "A list of promotions applied to a shipping option.", :uri "{base.family}/{shipmentdetails.shipping-option}/applied", :list-of "promotion", :family-id :promotions, :id :promotions/applied-promotions-for-shipping-option} {:name "applied-promotions-for-order-coupon", :description "A list of promotions applied to a coupon.", :uri "{base.family}/{coupons.order-coupon}/applied", :list-of "promotion", :family-id :promotions, :id :promotions/applied-promotions-for-order-coupon} {:name "purchase-coupon-promotion", :description "A list of promotions applied to a coupon.", :uri "{base.family}/{coupons.purchase-coupon}/{promotion-id}", :entity "promotion", :family-id :promotions, :id :promotions/purchase-coupon-promotion} {:name "applied-promotions-for-purchase-coupon", :description "A list of promotions applied to a coupon.", :uri "{base.family}/{coupons.purchase-coupon}/applied", :list-of "purchase-coupon-promotion", :family-id :promotions, :id :promotions/applied-promotions-for-purchase-coupon} {:name "assets", :description "A list of an item's assets.", :uri "{base.family}/{itemdefinitions.item-definition}", :list-of "asset", :family-id :assets, :id :assets/assets} {:name "asset", :description "A single asset resource for an item.", :uri "{base.family}/{base.scope}/{asset-id}", :entity "asset", :family-id :assets, :id :assets/asset} {:name "keyword-search-form", :description "\n\t\t\t\t\nSearch form to fill searching information.\n\n~! # Keyword Size Limit #\nKeywords can be up to 500 characters long. Any longer and Cortex API returns status 400 and a error message.\n!~\n\t\t\t\t\n\t\t\t", :uri "{searches}/keywords/form", :entity "search-keywords", :family-id :searches, :id :searches/keyword-search-form} {:name "keyword-search-action", :description "The submission resource to obtain search result.", :uri "{searches}/keywords/items", :entity "search-keywords", :family-id :searches, :id :searches/keyword-search-action} {:name "keyword-search-result", :description "The result of keyword search query.", :uri "{keyword-search-action}/{search-id}", :entity "collections.paginated-links", :family-id :searches, :id :searches/keyword-search-result} {:name "keyword-search-result-paged", :description "The paged result of keyword search query.", :uri "{keyword-search-result}/pages/{page-id}", :entity "collections.paginated-links", :family-id :searches, :id :searches/keyword-search-result-paged} {:name "searches", :description "Starting search resource.", :uri "{base.family}/{base.scope}", :family-id :searches, :id :searches/searches} {:name "navigation-items", :description "Paginated list of links that link to a navigation node's items.", :uri "{searches}/{navigations.navigation}", :entity "collections.paginated-links", :family-id :searches, :id :searches/navigation-items} {:name "navigation-items-paged", :description "Paginated list of links that link to a navigation node's items.", :uri "{navigation-items}/pages/{page-id}", :entity "collections.paginated-links", :family-id :searches, :id :searches/navigation-items-paged} {:name "order-tax", :description "A tax resource that identifies the tax owing for an order.", :uri "{base.family}/{orders.order}", :entity "taxes", :family-id :taxes, :id :taxes/order-tax} {:name "shipment-tax", :description "A tax resource that identifies the tax paid for a shipment.", :uri "{base.family}/{shipments.shipment}", :entity "taxes", :family-id :taxes, :id :taxes/shipment-tax} {:name "shipment-line-item-tax", :description "The shipment line item tax.", :uri "{base.family}/{shipments.shipment-line-item}", :entity "taxes", :family-id :taxes, :id :taxes/shipment-line-item-tax} {:name "paymentmethods-selector", :description "Selector to choose a payment method for an order.", :uri "{base.family}/selector/{orders.order}", :entity "controls.selector", :family-id :paymentmethods, :id :paymentmethods/paymentmethods-selector} {:name "paymentmethods-selector-choice", :description "A payment methods selector choice.", :uri "{paymentmethod}/selector/{orders.order}", :family-id :paymentmethods, :id :paymentmethods/paymentmethods-selector-choice} {:name "paymentmethods", :description "An order resource that identifies items to be purchased.", :uri "{base.family}/{base.scope}", :list-of "paymentmethod", :family-id :paymentmethods, :id :paymentmethods/paymentmethods} {:name "default-paymentmethod", :description "The default payment method.", :uri "{paymentmethods}/default", :alias "paymentmethod", :family-id :paymentmethods, :id :paymentmethods/default-paymentmethod} {:name "paymentmethod", :description "The payment method.", :uri "{paymentmethods}/{paymentmethod-id}", :entity "credit-card", :family-id :paymentmethods, :id :paymentmethods/paymentmethod} {:name "paymentmethod-info", :description "The payment method info for an order.", :uri "{base.family}/info/{orders.order}", :entity "controls.info", :family-id :paymentmethods, :id :paymentmethods/paymentmethod-info} {:name "paymentmethod-for-order", :description "The payment method for an order.", :uri "{base.family}/{orders.order}", :entity "credit-card", :family-id :paymentmethods, :id :paymentmethods/paymentmethod-for-order}], :relationship [{:name "price-for-item", :description "\n\t\t\t\tRead the unit price of an [item][items]. The unit price of an item is the price for one unit (quantity = 1) ", :rel "price", :rev "item", :from :items/item, :to :prices/price-for-item, :family-id :prices} {:name "price-for-cart-line-item", :description "Read the unit price of a cart line item. The unit price of a cart line item is the price for one unit when a given quantity is purchased (the line item quantity).", :rel "price", :rev "lineitem", :from :carts/line-item, :to :prices/price-for-cart-line-item, :family-id :prices} {:name "lowest-price-for-item-definition", :description "\n\t\t\t\tRead the price of the item option with the lowest price. This link will only appear if the item has options.", :rel "fromprice", :rev "definition", :from :itemdefinitions/item-definition, :to :prices/price-for-itemdefinition, :family-id :prices} {:name "price-for-shipment-line-item", :description "Retrieves the price of a shipment line item.", :rel "price", :from :shipments/shipment-line-item, :to :prices/price-for-shipment-line-item, :family-id :prices} {:name "selector-for-destination-info", :description "Use a Selector to select a destination.", :rel "selector", :rev "destinationinfo", :from :shipmentdetails/destination-info, :to :shipmentdetails/destination-info-selector, :family-id :shipmentdetails} {:name "choice-for-destination-info-selector", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :shipmentdetails/destination-info-selector, :to :shipmentdetails/destination-info-selector-choice, :family-id :shipmentdetails} {:name "description-for-destination-info-selector-choice", :description "Retrieve a choice's description.", :rel "description", :from :shipmentdetails/destination-info-selector-choice, :to :addresses/address, :family-id :shipmentdetails} {:name "action-for-destination-info-selector-choice", :description "Select a choice.", :rel "selectaction", :from :shipmentdetails/destination-info-selector-choice, :to :shipmentdetails/destination-info-selector-choice, :family-id :shipmentdetails} {:name "destination-info-for-order", :description "Retrieves the order's destination info.", :rel "destinationinfo", :rev "delivery", :from :orders/order, :to :shipmentdetails/destination-info, :family-id :shipmentdetails} {:name "shipping-address-for-order", :description "Retrieve the shipping address that is currently selected for the order.", :rel "destination", :from :shipmentdetails/destination-info, :to :addresses/address, :family-id :shipmentdetails} {:name "selector-for-shipping-option", :description "Use a Selector to select a shipping option (i.e. FedEx, Canada Post, etc.)", :rel "selector", :rev "shippingoptioninfo", :from :shipmentdetails/shipping-option-info, :to :shipmentdetails/shipping-option-info-selector, :family-id :shipmentdetails} {:name "choice-for-shipping-option-selector", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :shipmentdetails/shipping-option-info-selector, :to :shipmentdetails/shipping-option-info-selector-choice, :family-id :shipmentdetails} {:name "description-for-shipping-option-selector-choice", :description "Retrieve a choice's description.", :rel "description", :from :shipmentdetails/shipping-option-info-selector-choice, :to :shipmentdetails/shipping-option, :family-id :shipmentdetails} {:name "action-for-shipping-option-selector-choice", :description "Select a choice.", :rel "selectaction", :from :shipmentdetails/shipping-option-info-selector-choice, :to :shipmentdetails/shipping-option-info-selector-choice, :family-id :shipmentdetails} {:name "components-for-item-definition", :description "Read the item definition component from the list of available components.", :rel "components", :from :itemdefinitions/item-definition, :to :itemdefinitions/item-definition-components, :family-id :itemdefinitions} {:name "standalone-item-for-item-definition-component", :description "Read the component's stand alone item. Some components can be\n\t\t\tpurchased separately.", :rel "standaloneitem", :from :itemdefinitions/item-definition-component, :to :items/item, :family-id :itemdefinitions} {:name "options-for-item-definition-component", :description "Read the options for an item definition component.", :rel "options", :from :itemdefinitions/item-definition-component, :to :itemdefinitions/item-definition-component-options, :family-id :itemdefinitions} {:name "value-for-item-definition-component-option", :description "Read the item definition component option value.", :rel "value", :rev "option", :from :itemdefinitions/item-definition-component-option, :to :itemdefinitions/item-definition-component-option-value, :family-id :itemdefinitions} {:name "nested-components-for-item-definition-component", :description "Read a list of nested item definition components.", :rel "definition", :from :itemdefinitions/item-definition-component, :to :itemdefinitions/item-definition-nested-components, :family-id :itemdefinitions} {:name "options-for-nested-item-definition-component", :description "Read the options for a nested item definition component.", :rel "options", :from :itemdefinitions/item-definition-nested-component, :to :itemdefinitions/item-definition-nested-component-options, :family-id :itemdefinitions} {:name "value-for-nested-item-definition-component-option", :description "Read the nested item definition component option value.", :rel "value", :rev "option", :from :itemdefinitions/item-definition-nested-component-option, :to :itemdefinitions/item-definition-nested-component-option-value, :family-id :itemdefinitions} {:name "item-definition-for-item", :description "Read the item definition from the item.", :rel "definition", :rev "item", :from :items/item, :to :itemdefinitions/item-definition, :family-id :itemdefinitions} {:name "options-for-item-definition", :description "Read the options for an item definition.", :rel "options", :from :itemdefinitions/item-definition, :to :itemdefinitions/item-definition-options, :family-id :itemdefinitions} {:name "value-for-item-definition-option", :description "Read the item definition option value.", :rel "value", :rev "option", :from :itemdefinitions/item-definition-option, :to :itemdefinitions/item-definition-option-value, :family-id :itemdefinitions} {:name "create-purchase-form-from-order", :description "Retrieve the form.", :rel "purchaseform", :from :orders/order, :to :purchases/create-purchase-form, :family-id :purchases} {:name "create-purchase-action-from-create-purchase-form", :description "Submit the purchase form to complete the purchase.", :rel "submitorderaction", :from :purchases/create-purchase-form, :to :purchases/create-purchase-action, :family-id :purchases} {:name "line-items-for-purchase", :description "\n\t\t\t\tRetrieve a purchase's line items, which includes details on the item that was purchased such as item name, quantity purchased, and cost.", :rel "lineitems", :rev "purchase", :from :purchases/purchase, :to :purchases/purchase-line-items, :family-id :purchases} {:name "options-for-purchase-line-item", :description "The options for the item purchased. ", :rel "options", :rev "lineitem", :from :purchases/purchase-line-item, :to :purchases/purchase-line-item-options, :family-id :purchases} {:name "value-for-purchase-line-item-option", :description "The option value for the item purchased. ", :rel "value", :rev "option", :from :purchases/purchase-line-item-option, :to :purchases/purchase-line-item-option-value, :family-id :purchases} {:name "components-for-purchase-line-items", :description "Components for the purchased line item.", :rel "components", :from :purchases/purchase-line-item, :to :purchases/purchase-line-item-components, :family-id :purchases} {:name "options-for-purchase-line-item-component", :description "The options for the item's component. ", :rel "options", :rev "lineitem", :from :purchases/purchase-line-item-component, :to :purchases/purchase-line-item-component-options, :family-id :purchases} {:name "value-for-purchase-line-item-component-option", :description "The option value for the item's component. ", :rel "value", :rev "option", :from :purchases/purchase-line-item-component-option, :to :purchases/purchase-line-item-component-option-value, :family-id :purchases} {:name "paymentmeans-for-purchase", :description "List payment means for a purchase.", :rel "paymentmeans", :rev "purchase", :from :purchases/purchase-paymentmeans, :to :purchases/purchase, :family-id :purchases} {:name "purchases-for-profile", :description "Retrieve a list of purchases for the logged in customer.", :rel "purchases", :from :profiles/profile, :to :purchases/purchases, :family-id :purchases} {:name "billing-address-for-purchase", :description "The billing address associated with this purchase.", :rel "billingaddress", :from :purchases/purchase, :to :purchases/purchase-billingaddress, :family-id :purchases} {:name "add-address-form-from-addresses", :description "Form to create an address.", :rel "addressform", :from :addresses/addresses, :to :addresses/address-form, :family-id :addresses} {:name "add-address-form-action", :description "Action link to send address form to.", :rel "createaddressaction", :from :addresses/address-form, :to :addresses/create-address-action, :family-id :addresses} {:name "addresses-for-profile", :description "Read the list of the profile's addresses.", :rel "addresses", :from :profiles/profile, :to :addresses/addresses, :family-id :addresses} {:name "billing-addresses-from-addresses", :description "Read billing addresses from the list of addresses.", :rel "billingaddresses", :from :addresses/addresses, :to :addresses/billing-addresses, :family-id :addresses} {:name "default-billing-address-from-billing-addresses", :description "Read the default billing address from the list of billing addresses.", :rel "default", :from :addresses/billing-addresses, :to :addresses/default-billing-address, :family-id :addresses} {:name "profile-from-billing-addresses", :description "Read the profile linked to the billing addresses.", :rel "profile", :from :addresses/billing-addresses, :to :profiles/profile, :family-id :addresses} {:name "shipping-addresses-from-addresses", :description "Read shipping addresses from the list of addresses.", :rel "shippingaddresses", :from :addresses/addresses, :to :addresses/shipping-addresses, :family-id :addresses} {:name "default-shipping-address-from-shipping-addresses", :description "Read the default shipping address from the list of shipping addresses.", :rel "default", :from :addresses/shipping-addresses, :to :addresses/default-shipping-address, :family-id :addresses} {:name "profile-from-shipping-addresses", :description "Read the profile linked to the shipping addresses.", :rel "profile", :from :addresses/shipping-addresses, :to :profiles/profile, :family-id :addresses} {:name "selector-for-billingaddress-info", :description "Retrieve the selector.", :rel "selector", :rev "billingaddressinfo", :from :orders/billingaddress-info, :to :orders/billingaddress-info-selector, :family-id :orders} {:name "choices-for-billingaddress-info-selector", :description "Retrieve the choices for the billing address selector.", :rel "choice", :rev "selector", :from :orders/billingaddress-info-selector, :to :orders/billingaddress-info-selector-choices, :family-id :orders} {:name "choice-for-billingaddress-info-selector-choice", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :orders/billingaddress-info-selector-choices, :to :orders/billingaddress-info-selector-choice, :family-id :orders} {:name "description-for-billingaddress-info-selector-choice", :description "Retrieve a choice's description.", :rel "description", :from :orders/billingaddress-info-selector-choice, :to :addresses/address, :family-id :orders} {:name "action-for-billingaddress-info-selector-choice", :description "Select a choice.", :rel "selectaction", :from :orders/billingaddress-info-selector-choice, :to :orders/billingaddress-info-selector-choice, :family-id :orders} {:name "deliveries-for-order", :description "Retreive a list of [deliveries](#order-deliveries) for an order.", :rel "deliveries", :rev "order", :from :orders/order, :to :orders/deliveries, :family-id :orders} {:name "email-info-for-order", :description "Read order email needinfo from order.", :rel "emailinfo", :from :orders/order, :to :orders/email-info, :family-id :orders} {:name "discount-applied-to-cart", :description "\n\t\t\t\t\nRetrieve the discount amount applied to a cart [total][totals], excluding line item discounts.\n\n[totals]: #totals\n\t\t\t\t\n\t\t\t", :rel "discount", :rev "cart", :from :carts/cart, :to :discounts/discount-for-cart, :family-id :discounts} {:name "discount-applied-to-purchase", :description "\n\t\t\t\t\nRetrieve the discount amount applied to a [purchase][purchases].\n\n[purchases]: #purchases\n\t\t\t\t\n\t\t\t", :rel "discount", :rev "purchase", :from :purchases/purchase, :to :discounts/discount-for-purchase, :family-id :discounts} {:name "add-email-form-from-emails", :description "A form to add an email address to the current user.", :rel "emailform", :from :emails/emails, :to :emails/add-email-form, :family-id :emails} {:name "action-for-add-email-form", :description "Submit a form to add an email address to the current user.", :rel "createemailaction", :from :emails/add-email-form, :to :emails/add-email-action, :family-id :emails} {:name "emails-for-profile", :description "Read the list of the profile's email addresses.", :rel "emails", :from :profiles/profile, :to :emails/emails, :family-id :emails} {:name "recommendations-for-item", :description "Read other items recommended for an item.", :rel "recommendations", :from :items/item, :to :recommendations/item-recommendation-groups, :family-id :recommendations} {:name "recommendations-for-navigation", :description "Read other items recommended for a navigation node.", :rel "recommendations", :from :navigations/navigation, :to :recommendations/item-recommendation-groups, :family-id :recommendations} {:name "navigations-from-root", :description "Navigations can be found from the root resource.", :rel "navigations", :from :base/root, :to :navigations/navigations, :family-id :navigations} {:name "navigations-to-navigation", :description "The top navigations resource to the first-level navigation list.", :rel "element", :rev "top", :from :navigations/navigations, :to :navigations/navigation, :family-id :navigations} {:name "parent-node-to-child", :description "Navigate from a parent to a child navigation.", :rel "child", :rev "parent", :from :navigations/navigation, :to :navigations/navigation, :family-id :navigations} {:name "apply-coupon-form-from-couponinfo", :description "Form to apply a coupon to the order.", :rel "couponform", :from :coupons/couponinfo, :to :coupons/apply-coupon-to-order-form, :family-id :coupons} {:name "apply-coupon-to-order-action", :description "Apply a coupon to the order.", :rel "applycouponaction", :from :coupons/apply-coupon-to-order-form, :to :coupons/order-coupon-action, :family-id :coupons} {:name "coupon-from-couponinfo", :description "Read coupon from couponinfo.", :rel "coupon", :from :coupons/couponinfo, :to :coupons/order-coupon, :family-id :coupons} {:name "coupons-applied-to-order", :description "Read coupons applied to the order.", :rel "couponinfo", :rev "order", :from :orders/order, :to :coupons/couponinfo, :family-id :coupons} {:name "coupons-applied-to-purchase", :description "Read coupons applied to the purchase.", :rel "coupons", :from :purchases/purchase, :to :coupons/purchase-coupon-list, :family-id :coupons} {:name "slots-from-root", :description "Discover slots from the root of the API.", :rel "slots", :from :base/root, :to :slots/slots, :family-id :slots} {:name "item-onevent-for-slot", :description "Link an event from a slot to an item.", :rel "onevent", :from :slots/slot, :to :items/item, :family-id :slots} {:name "navigation-onevent-for-slot", :description "Link an event from a slot to a navigation node.", :rel "onevent", :from :slots/slot, :to :navigations/navigation, :family-id :slots} {:name "form-for-order-payment-token", :description "Form to create a new payment token for an order.", :rel "paymenttokenform", :from :paymentmethods/paymentmethod-info, :to :paymenttokens/order-payment-token-form, :family-id :paymenttokens} {:name "action-for-payment-token-for-order", :description "Action to create payment token for an order.", :rel "createpaymenttokenaction", :from :paymenttokens/order-payment-token-form, :to :paymenttokens/order-payment-token, :family-id :paymenttokens} {:name "form-for-profile-payment-token", :description "Form to crate a new payment token for a profile.", :rel "paymenttokenform", :from :paymentmethods/paymentmethods, :to :paymenttokens/profile-payment-token-form, :family-id :paymenttokens} {:name "create-payment-token-form-action", :description "Action link to send payment token form to.", :rel "createpaymenttokenaction", :from :paymenttokens/profile-payment-token-form, :to :paymenttokens/create-payment-token, :family-id :paymenttokens} {:name "line-items-for-cart", :description "A collection of items that have been added to a cart.", :rel "lineitems", :from :carts/cart, :to :carts/line-items, :family-id :carts} {:name "root-to-line-items-for-default-cart", :description "A collection of items that have been added to the default cart.", :rel "lineitems", :from :base/root, :to :carts/default-cart-line-items, :family-id :carts} {:name "cart-for-line-item", :description "Retrieve the cart that has the given line item. This workflow is\n\t\t\tuseful when you need to determine which cart the line item belongs to.", :rel "cart", :from :carts/line-item, :to :carts/cart, :family-id :carts} {:name "item-for-line-item", :description "What's the item this line item points to?", :rel "item", :from :carts/line-item, :to :items/item, :family-id :carts} {:name "add-to-default-cart-form-for-item", :description "The form to add an item to the default cart.", :rel "addtodefaultcartform", :from :items/item, :to :carts/add-to-default-cart-form, :family-id :carts} {:name "add-to-default-cart-action-for-form", :description "The action to invoke when submitting an add-to-default-cart form.", :rel "addtodefaultcartaction", :from :carts/add-to-default-cart-form, :to :carts/add-line-item-to-default-cart-action, :family-id :carts} {:name "cart-memberships-from-item", :description "Cart memberships from item", :rel "cartmemberships", :from :items/item, :to :carts/read-cart-memberships, :family-id :carts} {:name "root-to-default-cart", :description "\n\t\t\t\nRetrieve the shopper's default cart. When using *default* in the cart's URI, default evaluates to the logged in shopper's cart I.D.\nSee the main Cortex documentation for more information on *default*.\n\t\t\t\n\t\t", :rel "defaultcart", :from :base/root, :to :carts/default-cart, :family-id :carts} {:name "item-to-wishlist-form", :description "Link from items.item to a form used to add that item to a wishlist", :rel "addtowishlistform", :from :items/item, :to :wishlists/add-item-to-wishlist-form, :family-id :wishlists} {:name "wishlist-line-items-for-wishlist", :description "A collection of items that have been added to a wishlist.", :rel "lineitems", :rev "wishlist", :from :wishlists/wishlist, :to :wishlists/wishlist-line-items, :family-id :wishlists} {:name "wishlist-line-items-for-wishlist-line-item", :description "A collection of items that have been added to a wishlist.", :rel "list", :from :wishlists/wishlist-line-item, :to :wishlists/wishlist-line-items, :family-id :wishlists} {:name "wishlist-for-wishlist-line-item", :description "Retrieve the wishlist that has the given line item. This workflow is\n\t\t\tuseful when you need to determine which wishlist the line item belongs to.", :rel "wishlist", :from :wishlists/wishlist-line-item, :to :wishlists/wishlist, :family-id :wishlists} {:name "item-for-wishlist-line-item", :description "What's the item this line item points to?", :rel "item", :from :wishlists/wishlist-line-item, :to :items/item, :family-id :wishlists} {:name "wishlist-move-to-wishlist-form", :description "Link for a form used to move cart line item a wishlist", :rel "movetowishlistform", :from :carts/line-item, :to :wishlists/move-to-wishlist-form, :family-id :wishlists} {:name "wishlist-move-to-cart-form", :description "Link for a form used to move wishlist item to a cart", :rel "movetocartform", :from :wishlists/wishlist-line-item, :to :wishlists/move-to-cart-form, :family-id :wishlists} {:name "wishlist-membership-from-item", :description "Wishlist memberships for a given item", :rel "wishlistmemberships", :from :items/item, :to :wishlists/read-wishlist-memberships, :family-id :wishlists} {:name "default-wishlist-from-root", :description "Link from root resource to default wishlist.", :rel "defaultwishlist", :from :base/root, :to :wishlists/default-wishlist, :family-id :wishlists} {:name "profile-to-wishlists", :description "Retrieve a list of links to a shopper's wishlists", :rel "wishlists", :rev "profile", :from :profiles/profile, :to :wishlists/wishlists, :family-id :wishlists} {:name "line-items-for-shipment", :description "Retrieve the shipment line items associated with a shipment.", :rel "lineitems", :from :shipments/shipment, :to :shipments/shipment-line-items, :family-id :shipments} {:name "options-for-shipment-line-item", :description "Retrieve the options associated with a shipment line item.", :rel "options", :from :shipments/shipment-line-item, :to :shipments/shipment-line-item-options, :family-id :shipments} {:name "value-for-shipment-line-item-option", :description "Retrieve the option value associated with a shipment line item.", :rel "value", :from :shipments/shipment-line-item-option, :to :shipments/shipment-line-item-option-value, :family-id :shipments} {:name "destination-address-for-purchase", :description "Follow a link from a shipment to the shipping address.", :rel "destination", :from :shipments/shipment, :to :shipments/purchase-shipment-shipping-address, :family-id :shipments} {:name "shipping-option-for-purchase", :description "Follow a link from a shipment to the shipping option.", :rel "shippingoption", :from :shipments/shipment, :to :shipments/purchase-shipment-shipping-option, :family-id :shipments} {:name "shipments-for-purchase", :description "Retrieve the shipments associated with a purchase.", :rel "shipments", :from :purchases/purchase, :to :shipments/shipments, :family-id :shipments} {:name "total-for-cart", :description "Retrieve the total cost of all cart line items before cart total discounts are applied.", :rel "total", :from :carts/cart, :to :totals/cart-total, :family-id :totals} {:name "total-for-cart-line-item", :description "Retrieve the total cost of a single cart line item before cart line item discounts are applied.", :rel "total", :from :carts/line-item, :to :totals/cart-line-item-total, :family-id :totals} {:name "total-for-order", :description "Retrieve the total cost of the shopper's order including taxes and shipping costs.", :rel "total", :from :orders/order, :to :totals/order-total, :family-id :totals} {:name "total-for-shipment", :description "Retrieve the total cost for a shipment.", :rel "total", :from :shipments/shipment, :to :totals/shipment-total, :family-id :totals} {:name "total-for-shipment-line-item", :description "Retrieve the total cost for a shipment line item.", :rel "total", :from :shipments/shipment-line-item, :to :totals/shipment-line-item-total, :family-id :totals} {:name "root-to-countries", :description "Countries can be discovered at the root.", :rel "countries", :from :base/root, :to :geographies/countries, :family-id :geographies} {:name "regions-for-country", :description "A list of regions for a country.", :rel "regions", :from :geographies/country, :to :geographies/regions, :family-id :geographies} {:name "default-profile-from-root", :description "Link from root resource to default profile.", :rel "defaultprofile", :from :base/root, :to :profiles/default-profile, :family-id :profiles} {:name "items-from-root", :description "Link from root resource to items.", :rel "items", :from :base/root, :to :items/items, :family-id :items} {:name "selector-for-item-definition-option", :description "Selector for an item option value.", :rel "selector", :rev "option", :from :itemdefinitions/item-definition-option, :to :itemselections/itemselections-option-selector, :family-id :itemselections} {:name "value-choice-for-itemselections-option-selector", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :itemselections/itemselections-option-selector, :to :itemselections/itemselections-option-value-selector, :family-id :itemselections} {:name "description-for-itemselections-option-value-selector-choice", :description "Retrieve a choice's description.", :rel "description", :from :itemselections/itemselections-option-value-selector, :to :itemdefinitions/item-definition-option-value, :family-id :itemselections} {:name "action-for-itemselections-option-selector-choice", :description "Select a choice.", :rel "selectaction", :from :itemselections/itemselections-option-value-selector, :to :itemselections/itemselections-option-value-selector, :family-id :itemselections} {:name "read-cart-line-item-availability", :description "\n\t\t\t\tRead a line item's availability. The availability rule identifies the purchasable state of the item(s) in the line item.\n\t\t\t", :rel "availability", :rev "lineitem", :from :carts/line-item, :to :availabilities/availability-for-cart-line-item, :family-id :availabilities} {:name "read-item-availability", :description "Read an item's availability. The availability rule identifies the item's purchasability.", :rel "availability", :rev "item", :from :items/item, :to :availabilities/availability-for-item, :family-id :availabilities} {:name "batch-items-form-from-lookups", :description "A link from the lookups resource to the batch items form.", :rel "batchitemslookupform", :from :lookups/lookups, :to :lookups/batch-items-form, :family-id :lookups} {:name "batch-items-action-from-form", :description "Submit action for a batched item lookup form.", :rel "batchlookupaction", :from :lookups/batch-items-form, :to :lookups/batch-items-action, :family-id :lookups} {:name "result-for-batch-items", :description "The result from a batch lookup form action.", :rel "batchlookupaction", :from :lookups/batch-items-action, :to :lookups/batch-items, :family-id :lookups} {:name "lookup-item-form-from-lookups", :description "A link from the lookups resource to this form.", :rel "itemlookupform", :from :lookups/lookups, :to :lookups/lookup-item-form, :family-id :lookups} {:name "lookup-item-action-from-form", :description "Submit action for an item lookup form.", :rel "itemlookupaction", :from :lookups/lookup-item-form, :to :lookups/lookup-item-action, :family-id :lookups} {:name "root-to-lookups", :description "Link from root to lookups.", :rel "lookups", :from :base/root, :to :lookups/lookups, :family-id :lookups} {:name "code-for-item", :description "Read the code of an [item][items].", :rel "item", :rev "code", :from :items/item, :to :lookups/code-for-item, :family-id :lookups} {:name "registration-from-root", :description "Provides the form with which to register a new account.", :rel "newaccountform", :from :base/root, :to :registrations/new-account-registration-form, :family-id :registrations} {:name "applied-promotions-for-cart-line-item", :description "Retrieve the promotions applied to a cart line item.", :rel "appliedpromotions", :from :carts/line-item, :to :promotions/applied-promotions-for-cart-line-item, :family-id :promotions} {:name "applied-promotions-for-cart", :description "Retrieve promotions applied to a cart", :rel "appliedpromotions", :from :carts/cart, :to :promotions/applied-promotions-for-cart, :family-id :promotions} {:name "possible-promotions-for-cart", :description "Retrieve possible promotions for a cart.", :rel "possiblepromotions", :from :carts/cart, :to :promotions/possible-promotions-for-cart, :family-id :promotions} {:name "applied-promotions-for-purchase", :description "Retrieve promotions applied to a purchase.", :rel "appliedpromotions", :from :purchases/purchase, :to :promotions/applied-promotions-for-purchase, :family-id :promotions} {:name "applied-promotions-for-item", :description "Retrieve promotions applied to an item.", :rel "appliedpromotions", :from :items/item, :to :promotions/applied-promotions-for-item, :family-id :promotions} {:name "possible-promotions-for-item", :description "Retrieve possible promotions for an item.", :rel "possiblepromotions", :from :items/item, :to :promotions/possible-promotions-for-item, :family-id :promotions} {:name "applied-promotions-for-shipping-option", :description "Retrieve promotions applied to a shipping option.", :rel "appliedpromotions", :from :shipmentdetails/shipping-option, :to :promotions/applied-promotions-for-shipping-option, :family-id :promotions} {:name "promotion-for-order-coupon", :description "Retrieve a promotion trigged by a coupon on an order.", :rel "appliedpromotions", :from :coupons/order-coupon, :to :promotions/applied-promotions-for-order-coupon, :family-id :promotions} {:name "promotion-for-purchase-coupon", :description "Retrieve a promotion trigged by a coupon on a purchase.", :rel "appliedpromotions", :from :coupons/purchase-coupon, :to :promotions/applied-promotions-for-purchase-coupon, :family-id :promotions} {:name "fake-link-to-root", :description "Fake link to keep validator happy", :rel "purchasecoupons", :from :base/root, :to :promotions/purchase-coupon-promotion, :family-id :promotions} {:name "assets-for-item", :description "Retrieves an item's asset.", :rel "assets", :rev "definition", :from :itemdefinitions/item-definition, :to :assets/assets, :family-id :assets} {:name "next-page-keyword-search-results", :description "Pages of search results.", :rel "next", :rev "previous", :from :searches/keyword-search-result, :to :searches/keyword-search-result-paged, :family-id :searches} {:name "search-to-keyword-search-form", :description "Provide a navigation to keyword search.", :rel "keywordsearchform", :from :searches/searches, :to :searches/keyword-search-form, :family-id :searches} {:name "action-for-keyword-search-form", :description "Submit a keyword search action to this link.", :rel "submit", :from :searches/keyword-search-form, :to :searches/keyword-search-action, :family-id :searches} {:name "result-for-keyword-search", :description "The result from a keyword search. This should go into the 'result' section of a form definition.", :rel "itemkeywordsearchaction", :from :searches/keyword-search-action, :to :searches/keyword-search-result, :family-id :searches} {:name "next-page-navigation-items", :description "Pages of navigation items.", :rel "next", :rev "previous", :from :searches/navigation-items, :to :searches/navigation-items-paged, :family-id :searches} {:name "root-to-searches", :description "Link from root resource to searches.", :rel "searches", :from :base/root, :to :searches/searches, :family-id :searches} {:name "navigation-to-items", :description "Retrieve a paginated list of items associated with the navigation node.", :rel "items", :from :navigations/navigation, :to :searches/navigation-items, :family-id :searches} {:name "taxes-for-order", :description "Retrieves the total tax for an order, which includes the order's tax amount, currency, and type of tax (VAT, HST, etc.).", :rel "tax", :from :orders/order, :to :taxes/order-tax, :family-id :taxes} {:name "taxes-for-shipment", :description "\n\t\t\t\tRetrieves the total tax for a shipment, which includes the shipments' tax amount, currency, and type of tax (VAT, HST, etc.).", :rel "tax", :from :shipments/shipment, :to :taxes/shipment-tax, :family-id :taxes} {:name "taxes-for-shipment-line-item", :description "Retrieve the tax amount for a shipment line item.", :rel "tax", :from :shipments/shipment-line-item, :to :taxes/shipment-line-item-tax, :family-id :taxes} {:name "selector-for-paymentmethod-info", :description "Retrieve the selector for paymentmethod info.", :rel "selector", :rev "paymentmethodinfo", :from :paymentmethods/paymentmethod-info, :to :paymentmethods/paymentmethods-selector, :family-id :paymentmethods} {:name "choice-for-paymentmethods-selector", :description "Retrieve a choice.", :rel "choice", :rev "selector", :from :paymentmethods/paymentmethods-selector, :to :paymentmethods/paymentmethods-selector-choice, :family-id :paymentmethods} {:name "description-for-paymentmethods-selector-choice", :description "Retrieve a choice's description.", :rel "description", :rev "selector", :from :paymentmethods/paymentmethods-selector, :to :paymentmethods/paymentmethods-selector-choice, :family-id :paymentmethods} {:name "select-paymentmethods-choice", :description "Select a choice.", :rel "selectaction", :from :paymentmethods/paymentmethods-selector-choice, :to :paymentmethods/paymentmethods-selector-choice, :family-id :paymentmethods} {:name "paymentmethods-for-profile", :description "The customer's payment methods.", :rel "paymentmethods", :rev "profile", :from :profiles/profile, :to :paymentmethods/paymentmethods, :family-id :paymentmethods} {:name "default-paymentmethod", :description "The customer's default payment method.", :rel "default", :rev "list", :from :paymentmethods/paymentmethods, :to :paymentmethods/default-paymentmethod, :family-id :paymentmethods} {:name "paymentmethod-info-for-order", :description "Read the payment method currently selected for the order.", :rel "paymentmethodinfo", :rev "order", :from :orders/order, :to :paymentmethods/paymentmethod-info, :family-id :paymentmethods} {:name "paymentmethod-for-order", :description "Read a payment method.", :rel "paymentmethod", :from :paymentmethods/paymentmethod-info, :to :paymentmethods/paymentmethod-for-order, :family-id :paymentmethods}], :entity [{:name "item-price", :description "The unit price of an item.", :property [{:name "list-price", :description "The unit price of an item before catalog discounts are applied.", :array [{:is-a "base.cost"}]} {:name "purchase-price", :description "The unit price of an item after catalog discounts are applied. ", :array [{:is-a "base.cost"}]} {:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]}], :family-id :prices} {:name "cart-line-item-price", :description "The unit price of an item in the shopper’s cart.", :property [{:name "list-price", :description "The unit price of an item in the shopper’s cart before shopping cart discounts are applied.", :array [{:is-a "base.cost"}]} {:name "purchase-price", :description "\n\t\t\t\t\t\nThe unit price of an item in the shopper’s cart after shopping cart discounts are applied. This represents the price the shopper will\nactually pay for each unit. If no discounts have been applied, the list and purchase price will be the same.\n\t\t\t\t\t\n\t\t\t\t", :array [{:is-a "base.cost"}]} {:name "line-item-id", :description "The internal line item identifier.", :internal [nil], :string [nil]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]}], :family-id :prices} {:name "price-range", :description "The price range describes a price for an item or cart line item.", :property [{:name "from-price", :description "The price of the item's least expensive option.", :array [{:is-a "base.cost"}]} {:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]}], :family-id :prices} {:name "shipment-line-item-price", :description "The price of a shipment line item.", :property [{:name "list-price", :description "The price of a shipment line item before discounts are applied.", :array [{:is-a "base.cost"}]} {:name "purchase-price", :description "The price of a shipment line item after discounts are applied. If no discounts have been applied, the list and purchase price will be the same.", :array [{:is-a "base.cost"}]} {:name "shipment-line-item-id", :description "The internal lineitem identifier.", :internal [nil], :string [nil]} {:name "shipment-id", :description "The internal shipment identifier.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The internal purchase identifier.", :internal [nil], :string [nil]}], :family-id :prices} {:name "shipping-option", :description "Physical Shipping Option Representation.", :property [{:name "name", :description "Name of the shipping option.", :string [nil]} {:name "display-name", :description "The localized name of the carrier, intended for display in the client application.", :string [nil]} {:name "carrier", :description "Name of the carrier.", :string [nil]} {:name "cost", :description "The shipping costs for shipping the item(s) to the selected shipping address.", :array [{:is-a "base.cost"}]} {:name "shipping-option-id", :description "shipping option identification.", :internal [nil], :string [nil]}], :entity-type "elasticpath.shipmentdetails.shipping-option", :family-id :shipmentdetails} {:name "item-definition-component", :description "The item definition component.", :property [{:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "display-name", :description "The localized name of the item definition component, intended for display in the client application.", :string [nil]} {:name "details", :description "The details of the item definition component.", :array [{:is-a "base.details"}]} {:name "quantity", :description "The quantity of components.", :integer [nil]} {:name "component-id", :description "The internal component identifier.", :internal [nil], :string [nil]} {:name "standalone-item-id", :description "The internal stand alone item identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.itemdefinitions.component", :family-id :itemdefinitions} {:name "item-definition", :description "An item definition is a description of an item.", :property [{:name "item-id", :description "item identification.", :internal [nil], :string [nil]} {:name "display-name", :description "The localized name of the item definition, intended for display in the client application.", :string [nil]} {:name "details", :description "The details of the item definition.", :array [{:is-a "base.details"}]}], :entity-type "elasticpath.itemdefinitions.item-definition", :family-id :itemdefinitions} {:name "item-definition-option", :description "The item definition option", :property [{:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "display-name", :description "The localized name of the item definition option, intended for display in the client application.", :string [nil]} {:name "name", :description "The name of the item definition option.", :string [nil]} {:name "option-id", :description "The internal option identifier.", :internal [nil], :string [nil]} {:name "option-value-id", :description "The internal option value identifier.", :internal [nil], :string [nil]} {:name "component-id", :description "The internal component identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.itemdefinitions.option", :family-id :itemdefinitions} {:name "item-definition-option-value", :description "The description of the item definition option that is currently selected.", :property [{:name "display-name", :description "The localized name of the item definition option value, intended for display in the client application.", :string [nil]} {:name "name", :description "The name of the item definition option value.", :string [nil]}], :entity-type "elasticpath.itemdefinitions.value", :family-id :itemdefinitions} {:name "purchase-line-item-configuration", :description "The configuration of a key/value", :dynamic [nil], :family-id :purchases} {:name "purchase-line-item", :description "A collection of items the customer purchased", :property [{:name "line-item-id", :description "The line item ID.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The purchase ID.", :internal [nil], :string [nil]} {:name "name", :description "The name of the item that was purchased.", :string [nil]} {:name "quantity", :description "The number of items that were purchased.", :integer [nil]} {:name "configuration", :description "The Fields associated with the purchase line item (Dictionary of String/Strings) ", :is-a "purchase-line-item-configuration"} {:name "line-extension-tax", :description "The tax paid for the purchased item(s).", :array [{:is-a "base.cost"}]} {:name "line-extension-amount", :description "The purchase price of the item(s), excluding taxes.", :array [{:is-a "base.cost"}]} {:name "line-extension-total", :description "The total amount paid for the item(s), including taxes.", :array [{:is-a "base.cost"}]}], :entity-type "elasticpath.purchases.line-item", :family-id :purchases} {:name "purchase-line-item-option", :description "The purchase line item option entity.", :property [{:name "name", :description "The name of the item option.", :string [nil]} {:name "display-name", :description "The localized name of the item option, intended for display in the client application.", :string [nil]} {:name "selected-value-id", :description "The id of the selected value.", :string [nil]} {:name "option-id", :description "The id of the option.", :string [nil]}], :entity-type "elasticpath.purchases.option", :family-id :purchases} {:name "purchase-line-item-option-value", :description "The line item option value entity.", :property [{:name "name", :description "The name of the item option.", :string [nil]} {:name "display-name", :description "The localized name of the option name, intended for display in the client application.", :string [nil]}], :entity-type "elasticpath.purchases.value", :family-id :purchases} {:name "payment-means", :description "Describes a payment means.", :property [{:name "payment-means-id", :description "The payment means identifier.", :internal [nil], :string [nil]}], :family-id :purchases} {:name "payment-means-payment-token", :description "The payment token used for the purchase.", :is-a "payment-means", :property [{:name "display-name", :description "A description of the payment token.", :string [nil]}], :family-id :purchases} {:name "expiration-date", :description "Describes the expiration date of a credit card.", :property [{:name "month", :description "The month of the expiration date.", :string [{:min-length "2", :max-length "2"}]} {:name "year", :description "The year of the expiration date.", :string [{:min-length "4", :max-length "4"}]}], :family-id :purchases} {:name "payment-means-credit-card", :description "The credit card payment means for the purchase", :is-a "payment-means", :property [{:name "card-type", :description "The card type used for the purchase.", :string [nil]} {:name "telephone-type", :description "The type of telephone number.", :string [nil]} {:name "telephone-number", :description "The telephone number.", :string [nil]} {:name "primary-account-number-id", :description "The primary account number identifier.", :string [nil]} {:name "holder-name", :description "The card holder name used for the purchase.", :string [nil]} {:name "expiry-date", :description "The expiry date of card used for the purchase.", :is-a "expiration-date"} {:name "billing-address", :description "The billing address used for the purchase.", :is-a "addresses.address"}], :entity-type "elasticpath.purchases.purchase.paymentmeans", :family-id :purchases} {:name "purchase", :description "An order to be purchased.", :property [{:name "order-id", :description "The internal order identifier.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The internal cart identifier.", :internal [nil], :string [nil]} {:name "purchase-number", :description "\n\t\t\t\t\t\nPurchase number associated with the purchase. This is the reference customers use\nif they need to communicate with the store's customer service representative.\n\t\t\t\t\t\n\t\t\t\t", :string [nil]} {:name "status", :description "\n\t\t\t\t\t\nIndicates the status of the purchase. The following are possible status values:\n\n* IN_PROGRESS - The purchase is being processed.\n* COMPLETED - The purchase is processed.\n* CANCELLED - The purchase is cancelled.\n\t\t\t\t\n\t\t\t\t", :string [nil]} {:name "monetary-total", :description "The total cost paid for the purchase, including taxes.", :array [{:is-a "base.cost"}]} {:name "taxes", :description "The taxes for the purchase", :array [{:is-a "base.named-cost"}]} {:name "tax-total", :description "The total amount of tax paid for the purchase.", :is-a "base.cost"} {:name "purchase-date", :description "The date on which the purchase was made.", :is-a "base.date"}], :entity-type "elasticpath.purchases.purchase", :family-id :purchases} {:name "address", :description "The address for the customer.", :property [{:name "address-id", :description "The internal address identifier.", :internal [nil], :string [nil]} {:name "name", :description "The customer name.", :is-a "base.name"} {:name "address", :description "\n\t\t\t\t\tThe customer address. Address field names are based on the v.card specification. For more information on this specification, see [v.card](http://tools.ietf.org/html/rfc2426).", :is-a "address-detail"}], :entity-type "elasticpath.addresses.address", :family-id :addresses} {:name "address-detail", :description "Describes a customers address", :property [{:name "address-id", :description "The internal address identifier.", :internal [nil], :string [nil]} {:name "street-address", :description "The street address.", :string [nil]} {:name "extended-address", :description "Extra field for address information. This field is optional.", :string [nil]} {:name "locality", :description "The city name.", :string [nil]} {:name "region", :description "Valid region codes for this field can be retrieved using the [Geographies][geographies] Resource.\n\n[geographies]: #geographies\n", :string [nil]} {:name "postal-code", :description "Postal code or zip code.", :string [nil]} {:name "country-name", :description "Valid country codes for this field can be retrieved using the [Geographies][geographies] Resource.\n\n[geographies]: #geographies\n", :string [nil]}], :family-id :addresses} {:name "delivery", :description "The delivery information for an order.", :property [{:name "delivery-id", :description "The internal delivery identifier.", :internal [nil], :string [nil]} {:name "delivery-type", :description "The delivery type for an order.", :string [nil]} {:name "order-id", :description "The internal order identifier.", :internal [nil], :string [nil]}], :family-id :orders} {:name "order", :description "An order to be purchased", :property [{:name "order-id", :description "The internal order identifier.", :internal [nil], :string [nil]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]}], :family-id :orders} {:name "discount", :description "A discount of a cart.", :property [{:name "discount", :description "\n\t\t\t\t\t\nThe amount of the discount. Similar to prices, discount is an array because the total may be a combination\nof amounts in multiple currencies, for example $20 CAD + 20000 points.\n\t\t\t\t\t\n\t\t\t\t", :array [{:is-a "base.cost"}]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The internal purchase identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.discounts.discount", :family-id :discounts} {:name "email", :description "The email associated with a customer account.", :property [{:name "email-id", :description "The internal email identifier.", :internal [nil], :string [nil]} {:name "email", :description "The email address.", :string [nil]}], :entity-type "elasticpath.emails.email", :family-id :emails} {:name "recommendations", :description "A list of recommendation groups.", :property [{:name "name", :description "The Cortex system's name for this recommendations group.", :string [nil]} {:name "recommendations-id", :description "The internal recommendations identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.recommendations", :family-id :recommendations} {:name "navigation", :description "A single navigation node.", :property [{:name "name", :description "The Cortex system's name for the node.", :string [nil]} {:name "display-name", :description "The localized name of the node, intended for display in the client application.", :string [nil]} {:name "node-id", :description "The internal node identifier.", :internal [nil], :string [nil]} {:name "details", :description "\n\t\t\t\t\t\nAn array of the navigation node's attributes. Attributes describe the details of the navigation node, like the node's name,\ndescription, associated subcategories, etc. Attributes are different each store. To get a list of navigation attributes, you'll need to coordinate with your store marketer who creates these navigation nodes and attributes.\n\t\t\t\t\t\n\t\t\t\t", :array [{:is-a "base.details"}]}], :entity-type "elasticpath.navigations.node", :family-id :navigations} {:name "coupon", :description "A coupon representation", :property [{:name "coupon-id", :description "The coupon identifier.", :internal [nil], :string [nil]} {:name "parent-id", :description "The parent id of the coupon.", :internal [nil], :string [nil]} {:name "parent-type", :description "The parent type of the coupon.", :internal [nil], :string [nil]} {:name "code", :description "The coupon code.", :string [nil]}], :entity-type "elasticpath.coupons.coupon", :family-id :coupons} {:name "slot", :description "The slot.", :property [{:name "name", :description "Slot's name.", :string [nil]} {:name "relative-location", :description "The relative location of the slot's media asset.", :string [nil]} {:name "content-location", :description "\n\t\t\t\t\t\nLinks to the slot's media content, which could be an image in either .jpg, .gif, or .png format. The image's location may\nvery as some stores have a separate server for media files.\n\nCortex  only supports .jpg, .gif, or .png files for slots. However, your Cortex API implementation\nmay be customized to support other media file types.\n\t\t\t\t\t\n\t\t\t\t", :string [nil]} {:name "slot-target-id", :description "The slot target id.", :internal [nil], :integer [nil]} {:name "slot-id", :description "The slot identifier.", :internal [nil], :string [nil]} {:name "slot-type", :description "The slot content-wrapper type.", :internal [nil], :string [nil]}], :entity-type "elasticpath.slots.slot", :family-id :slots} {:name "payment-token", :description "The payment token entity.", :is-a "paymentmethods.payment-method", :property [{:name "display-name", :description "A description of the payment token to be used for display purposes.", :string [nil]} {:name "token", :description "The payment token created by a payment tokenization service.", :string [nil]}], :entity-type "elasticpath.paymenttokens.payment-token", :family-id :paymenttokens} {:name "line-item-configuration", :description "The configuration of a line item.", :dynamic [nil], :family-id :carts} {:name "line-item", :description "A line item in a cart.", :property [{:name "quantity", :description "The total number of items in the line item.", :integer [nil]} {:name "line-item-id", :description "The internal line item identifier.", :internal [nil], :string [nil]} {:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "cart-id", :description "The internal cart identifier.", :internal [nil], :string [nil]} {:name "configuration", :description "The details of the line item configuration.", :is-a "line-item-configuration"}], :family-id :carts} {:name "cart", :description "The shopping cart.", :property [{:name "cart-id", :description "The cart identifier.", :internal [nil], :string [nil]} {:name "total-quantity", :description "\n\t\t\t\t\t\nLists the total number of [items][items] in the cart.\n\n[items]: #items\n\t\t\t\t\t\n\t\t\t\t", :integer [nil]}], :family-id :carts} {:name "add-item-to-wishlist-form", :description "Form for adding an item to a wishlist", :family-id :wishlists} {:name "wishlist-line-item", :description "A line item in a wishlist.", :property [{:name "line-item-id", :description "The internal line item identifier.", :internal [nil], :string [nil]} {:name "item-id", :description "The internal item identifier.", :internal [nil], :string [nil]} {:name "wishlist-id", :description "The internal wishlist identifier.", :internal [nil], :string [nil]}], :entity-type "wishlists.wishlist-line-item", :family-id :wishlists} {:name "move-to-wishlist-form", :description "Form for adding an item to a wishlist", :family-id :wishlists} {:name "move-to-cart-form", :description "Form for used to move wishlist item to a cart", :property [{:name "quantity", :description "Quantity", :integer [nil]}], :family-id :wishlists} {:name "wishlist", :description "The wishlist.", :property [{:name "wishlist-id", :description "The wishlist identifier.", :internal [nil], :string [nil]}], :entity-type "wishlists.wishlist", :family-id :wishlists} {:name "links", :description "A collection of links", :property [{:name "element-list-type", :description "The element list type.", :internal [nil], :string [nil]} {:name "element-list-id", :description "The element list id.", :internal [nil], :string [nil]} {:name "name", :description "The element list name.", :internal [nil], :string [nil]}], :entity-type "elasticpath.collections.links", :family-id :collections} {:name "paginated-links", :description "A paginated collection of links", :property [{:name "pagination", :description "Defines the pagination aspects of the links.", :is-a "pagination"}], :entity-type "elasticpath.collections.paginated-links", :family-id :collections} {:name "pagination", :description "Pagination settings.", :property [{:name "current", :description "The current page number", :integer [nil]} {:name "page-size", :description "The maximum number of elements per page", :integer [nil]} {:name "pages", :description "The total number of pages.", :integer [nil]} {:name "results-on-page", :description "The number of elements on this page", :integer [nil]} {:name "results", :description "The total number of elements.", :integer [nil]}], :family-id :collections} {:name "shipment-line-item", :description "The shipment line item entity.", :property [{:name "purchase-id", :description "The purchase identifier.", :internal [nil], :string [nil]} {:name "line-item-id", :description "The line item identifier.", :internal [nil], :string [nil]} {:name "parent-line-item-id", :description "The parent line item identifier.", :internal [nil], :string [nil]} {:name "parent-uri", :description "The parent resource uri.", :internal [nil], :string [nil]} {:name "name", :description "The name.", :string [nil]} {:name "quantity", :description "The quantity.", :integer [nil]} {:name "shipment-id", :description "The shipment identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.shipments.line-item", :family-id :shipments} {:name "shipment-line-item-option", :description "The shipment line item option entity.", :property [{:name "purchase-id", :description "The purchase identifier.", :internal [nil], :string [nil]} {:name "line-item-id", :description "The line item identifier.", :internal [nil], :string [nil]} {:name "line-item-option-id", :description "The line item option identifier.", :internal [nil], :string [nil]} {:name "line-item-option-value-id", :description "The line item option value identifier.", :internal [nil], :string [nil]} {:name "name", :description "The name.", :string [nil]} {:name "display-name", :description "The display name.", :string [nil]} {:name "line-item-uri", :description "The line item uri.", :internal [nil], :string [nil]} {:name "shipment-id", :description "The shipment identifier.", :internal [nil], :string [nil]}], :entity-type "elasticpath.shipments.option", :family-id :shipments} {:name "shipment-line-item-option-value", :description "The shipment line item option value entity.", :property [{:name "name", :description "The name.", :string [nil]} {:name "display-name", :description "The display name.", :string [nil]}], :entity-type "elasticpath.shipments.value", :family-id :shipments} {:name "shipment", :description " A shipment of items associated with a purchase.", :property [{:name "shipment-id", :description "The internal shipment identifier.", :internal [nil], :string [nil]} {:name "purchase-id", :description "The internal purchase identifier.", :internal [nil], :string [nil]} {:name "status", :description "Indicates the status of the shipment.", :is-a "status"}], :entity-type "elasticpath.shipments.shipment", :family-id :shipments} {:name "status", :description "The status code of the shipment", :property [{:name "code", :description "The status code.", :string [nil]}], :family-id :shipments} {:name "total", :description "A total cost.", :property [{:name "cost", :description "The total costs. This is an array because the total cost have multiple currencies. For example, $20 USD + 20,000 loyalty points.", :array [{:is-a "base.cost"}]}], :entity-type "elasticpath.totals.total", :family-id :totals} {:name "country", :description "Describes a country.", :property [{:name "name", :description "The name or code of the country.", :string [nil]} {:name "display-name", :description "The localized country name, intended for display in the client application.", :string [nil]}], :entity-type "elasticpath.geographies.country", :family-id :geographies} {:name "region", :description "Describes a region.", :property [{:name "name", :description "The name or code of the region.", :string [nil]} {:name "display-name", :description "The localized region name, intended for display in the client application.", :string [nil]}], :entity-type "elasticpath.geographies.region", :family-id :geographies} {:name "profile", :description "The profile of the logged in customer.", :property [{:name "given-name", :description "Customer's first name.", :string [nil]} {:name "family-name", :description "Customer's last name.", :string [nil]} {:name "profile-id", :description "The internal profile identifier.", :internal [nil], :string [nil]}], :entity-type "profiles.profile", :family-id :profiles} {:name "item", :description "Defines the item type.", :property [{:name "item-id", :description "The item identifier.", :internal [nil], :string [nil]}], :family-id :items} {:name "date", :description "Describes a date.", :property [{:name "value", :description "The millisecond value of the date in [Epoch time](http://en.wikipedia.org/wiki/Epoch_\\(reference_date\\)#Computing).\n\t\t\t\t", :long [nil]} {:name "display-value", :description "The formatted date value to display on the client application.", :string [nil]}], :family-id :base} {:name "details", :description "Describes the details.", :property [{:name "display-name", :description "The formatted string to display on the client.", :string [nil]} {:name "name", :description "The name used by the Cortex system.\n\t\t\t\t", :string [nil]} {:name "display-value", :description "The formatted string to display on the client.", :string [nil]} {:name "value", :description "The raw value.", :any [nil]}], :family-id :base} {:name "cost", :description "Describes a cost.", :property [{:name "currency", :description "The currency the cost is in.", :string [{:min-length "2", :max-length "3"}]} {:name "amount", :description "\n\tThe decimal value of the cost.\n\t", :decimal [{:precision "3", :fixed "3"}]} {:name "display", :description "Formatted currency string that can be displayed on the client application.", :string [nil]}], :family-id :base} {:name "named-cost", :description "Describes a tax.", :is-a "cost", :property [{:name "title", :description "The name of the tax.", :string [nil]}], :family-id :base} {:name "name", :description "Describes a person's name.", :property [{:name "given-name", :description "The person's given name.", :string [nil]} {:name "family-name", :description "The person's family name.", :string [nil]}], :family-id :base} {:name "availability", :description "The availability information for an item.", :property [{:name "state", :description "\n\t\t\t\t\t\nThe state of availability for an item or line item. In Elastic Path Commerce Engine, the states are:\n\n*  ALWAYS\n*  NOT\\_AVAILABLE\n*  AVAILABLE\\_FOR\\_BACK\\_ORDER\n*  AVAILABLE\\_FOR\\_PRE\\_ORDER\n\t\t\t\t\t\n\t\t\t\t", :string [nil]} {:name "release-date", :description "\n\t\t\t\t\t\n\t\t\t\t\t\tOptional property. This is the date the item becomes available for purchase.\n\t\t\t\t\t\tIn Elastic Path Commerce Engine, release-date is only visible when the item is available for pre-order.\n\t\t\t\t\t\n\t\t\t\t", :is-a "base.date"}], :entity-type "elasticpath.availabilities.availability", :family-id :availabilities} {:name "codes", :description "A list of codes.", :property [{:name "codes", :description "A list of codes.", :array [{:string [nil]}]}], :family-id :lookups} {:name "code", :description "The item sku code", :property [{:name "code", :description "The sku code.", :string [nil]}], :family-id :lookups} {:name "registration", :description "Register a new account.", :property [{:name "given-name", :description "The first name associated with new account.", :string [nil]} {:name "family-name", :description "The last name associated with new account.", :string [nil]} {:name "username", :description "\n\t\t\t\t\t\nThe username associated with new account. Usernames should be the customer's email address. By default, Cortex API is\nexpecting a customer's email address for their username. Your implementation of Cortex API may differ, so check with\nyour system administrator for your username rules.\n\t\t\t\t\t\n\t\t\t\t", :string [nil]} {:name "password", :description "The password associated with new account.", :string [nil]}], :entity-type "registrations.new-account-registration", :family-id :registrations} {:name "promotion", :description "A promotion representation", :property [{:name "promotion-id", :description "The internal promotion identifier.", :internal [nil], :string [nil]} {:name "name", :description "The promotion identifier.", :string [nil]} {:name "display-name", :description "The promotion's localized name, intended for display in the client application.", :string [nil]} {:name "display-description", :description "The promotion's localized marketing description, intended for display in the client application.", :string [nil]} {:name "display-conditions", :description "The promotion's localized terms and conditions, intended for display in the client application.", :string [nil]}], :entity-type "promotions.promotion", :family-id :promotions} {:name "asset", :description "The asset.", :property [{:name "name", :description "The asset name Cortex system uses.", :string [nil]} {:name "display-name", :description "The localized asset name, in to display in the client application.", :string [nil]} {:name "content-location", :description "\n\t\t\t\t\t\nRepresents the image's absolute path. Images can be in either .jpg, .gif, or .png formats. The asset's location may vary\nas your may have a separate server for your media files.\nOut of the box, Cortex API only supports .jpg, .gif, and .png files. However, your Cortex API implementation may be customized\nto support other media file types. Check with your provider for more information.\n\t\t\t\t\t\n\t\t\t\t", :string [nil]} {:name "relative-location", :description "\n\t\t\t\t\t\nThe asset's relative path to the asset. For example, if your media server is at `mediaserver.onlinestore.com` and your image\nis stored in `mediaserver.onlinestore.com/images/cameras/cameraImage.png`, the `relative-location` will display\n`images/cameras/cameraImage.png`.\n\t\t\t\t\t\n\t\t\t\t", :string [nil]}], :entity-type "elasticpath.assets.asset", :family-id :assets} {:name "search-keywords", :description "Search keywords.", :property [{:name "keywords", :description "Search keywords.", :string [{:min-length "1", :max-length "500"}]} {:name "page-size", :description "\n\t\t\t\t\t\nDefines the number of search results to list per page. This field is optional. If the field is not specified,\nCortex API's default page-size value is used, which can differ depending on your implementation.\n\t\t\t\t\t\n\t\t\t\t", :integer [nil]}], :entity-type "elasticpath.searches.keyword-search", :family-id :searches} {:name "taxes", :description "Taxes owing for an order.", :property [{:name "total", :description "The total tax.", :is-a "base.cost"} {:name "cost", :description "The cost of the tax(es).", :array [{:is-a "base.named-cost"}]}], :entity-type "elasticpath.taxes.taxes", :family-id :taxes} {:name "payment-method", :description "Describes a payment method.", :property [{:name "payment-method-id", :description "The payment method identifier.", :internal [nil], :string [nil]}], :family-id :paymentmethods} {:name "credit-card", :description "The credit card used for the payment method.", :is-a "payment-method", :property [{:name "card-type", :description "The credit card type.", :string [nil]} {:name "cardholder-name", :description "The credit card holder name.", :string [nil]} {:name "card-number", :description "The card number.", :string [nil]} {:name "start-month", :description "The start month.", :string [nil]} {:name "start-year", :description "The start year.", :string [nil]} {:name "issue-number", :description "The issue number.", :integer [nil]} {:name "expiry-month", :description "The month of the expiration date.", :string [{:min-length "2", :max-length "2"}]} {:name "expiry-year", :description "The year of the expiration date.", :string [{:min-length "4", :max-length "4"}]}], :entity-type "elasticpath.paymentmethods.credit-card", :family-id :paymentmethods} {:name "info", :description "Information.", :property [{:name "name", :description "The info object's name.", :string [nil]} {:name "info-id", :description "The id of the represented info.", :internal [nil], :string [nil]}], :entity-type "elasticpath.controls.info", :family-id :controls} {:name "selector", :description "Describes a selector selecting a choice.", :property [{:name "name", :description "The selector object's name", :string [nil]} {:name "selection-rule", :description "\n\t\t\t\t\t\nIndicates the number of selections that must be made in the selector. If this rule isn't satisfied, a NeedInfo link will likely occur.\nFor example, if a payment method is not specified for an order, a needinfo link will appear and stop the order from being purchased.\n\t\t\t\t\t\n\t\t\t\t", :integer [nil]} {:name "selector-id", :description "The id of the represented selector.", :internal [nil], :string [nil]}], :entity-type "elasticpath.controls.selector", :family-id :controls}], :uri-part [{:name "shipment-details-id", :description "A value representing the shipment detail identification.", :family-id :shipmentdetails} {:name "shipping-option-id", :description "A value representing the shipping option identification.", :family-id :shipmentdetails} {:name "component-id", :description "The component ID.", :family-id :itemdefinitions} {:name "option-id", :description "The option ID.", :family-id :itemdefinitions} {:name "option-value-id", :description "The option value ID.", :family-id :itemdefinitions} {:name "line-item-id", :description "The line item identifier.", :family-id :purchases} {:name "paymentmeans-id", :description "The paymentmeans ID.", :family-id :purchases} {:name "payment-id", :description "The paymentmeans ID.", :family-id :purchases} {:name "purchase-id", :description "The purchase ID", :family-id :purchases} {:name "address-id", :description "The address ID.", :family-id :addresses} {:name "delivery-id", :description "The delivery ID", :family-id :orders} {:name "order-id", :description "The order ID", :family-id :orders} {:name "email-id", :description "A value representing the customer's email ID.", :family-id :emails} {:name "group-id", :description "The recommendations group ID.", :family-id :recommendations} {:name "node-id", :description "The navigation ID.", :family-id :navigations} {:name "coupon-id", :description "The coupon ID.", :family-id :coupons} {:name "slot-id", :description "The slot ID", :family-id :slots} {:name "line-item-id", :description "\n\t\t\t\t\nThe line item identifier. This ID is a unique number assigned by Cortex API when the [item][items]is added to a cart.\n\n[items]: #items\n\t\t\t\t\n\t\t\t", :family-id :carts} {:name "cart-id", :description "The cart identifier.", :family-id :carts} {:name "line-item-id", :description "\n\t\t\t\t\nThe line item identifier. This ID is a unique number assigned by Cortex API when the [item][items]is added to a wishlist.\n\n[items]: #items\n\t\t\t\t\n\t\t\t", :family-id :wishlists} {:name "wishlist-id", :description "The wishlist identifier.", :family-id :wishlists} {:name "shipment-line-item-id", :description "The shipment line item ID.", :family-id :shipments} {:name "shipment-line-item-option-id", :description "The shipment line item option ID.", :family-id :shipments} {:name "shipment-line-item-option-value-id", :description "The shipment line item option value ID.", :family-id :shipments} {:name "shipment-id", :description "The shipment ID.", :family-id :shipments} {:name "country-id", :description "The country id.", :family-id :geographies} {:name "region-id", :description "The region id.", :family-id :geographies} {:name "profile-id", :description "The profile ID.", :family-id :profiles} {:name "item-id", :description "The item identifier. This ID is a unique value across the scope.", :family-id :items} {:name "option-id", :description "The option ID.", :family-id :itemselections} {:name "option-value-id", :description "The option value ID.", :family-id :itemselections} {:name "family", :description "Defines the name of a definitions family, like 'items' or 'prices'.", :family-id :base} {:name "scope", :description "Defines the scope of a resource.", :family-id :base} {:name "resource-id", :description "Defines a resource ID.", :family-id :base} {:name "batch-id", :description "The batch id.", :family-id :lookups} {:name "promotion-id", :description "The promotion ID.", :family-id :promotions} {:name "asset-id", :description "A value representing asset ID.", :family-id :assets} {:name "search-id", :description "The search object's identifier", :family-id :searches} {:name "page-id", :description "The paged search result's page identifier", :family-id :searches} {:name "paymentmethod-id", :description "The payment method ID", :family-id :paymentmethods}], :advisor [{:name "add-item-to-wishlist-form", :description "Add to wishlist pre-conditions check", :blocks "add-item-to-wishlist-form", :family-id :wishlists} {:name "move-to-wishlist-form", :description "Move to wishlist pre-conditions check", :blocks "move-to-wishlist-form", :family-id :wishlists} {:name "move-to-cart-form", :description "Move to cart pre-conditions check", :blocks "move-to-cart-form", :family-id :wishlists}], :plan [{:name "list-element-template", :description "Read an element in a list.", :step [{:description "Read the list.", :start "{start-resource}", :follow-link "{list-name}", :link-back "{start-name}", :result "{list-resource}"} {:description "Read an element in the list.", :start "{list-resource}", :follow-link "element", :link-back "list", :result "{element-resource}"}], :family-id :collections} {:name "read-root", :description "Read the root resource to discover the API.", :step [{:description "Read the root resource.", :start "root", :read-self [nil]}], :family-id :base} {:name "form-control-template", :description "The template for a form control", :step [{:description "Retrieve the form.", :start "{start-resource}", :follow-link "{read-form-link}", :result "{form-resource}"} {:description "Submit the form", :start "{form-resource}", :submit "{form-resource}", :to "{submit-resource}", :via-link "{submit-action-link}", :result "{submit-result}"}], :family-id :controls}]}